{"version":3,"sources":["components/ControlBar.js","components/MapPane.js","components/listItems.js","components/SimpleDialog.js","components/FullScreenDialog.js","components/RegistDialog.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["setSlider","endRunning","setRunning","speedChange","targetRoute","map","spId","ControlBar","props","state","play_state","val","label","value","setState","Math","ceil","stopMovie","startMovie","setSpeed","style","bar_style","ListItem","Button","variant","color","marginRight","onClick","this","Slider","getAriaValueText","onChangeProgress","aria-labelledby","valueLabelDisplay","step","marks","min","max","onChange","onChangeVal","marginLeft","Component","ieRunning","setPhase","target","float","width","lineHeight","borderRadius","border","padding","background","position","bottom","left","zindex","mapbox","workerClass","MapboxWorker","routeDistance","speed","start","phase","pointer","cameraAltitude","running","angle","camera_angle","speedMul","angleVal","dem","parseGeojson","str","json","JSON","parse","features","forEach","e","c","geometry","coordinates","type","push","propcLine","getLayer","removeLayer","getSource","removeSource","setGeojsonLayer","fitBounds","requestAnimationFrame","frame","xmin","xmax","ymin","ymax","element","viewState","window","innerWidth","height","innerHeight","longitude","latitude","zoom","maxZoom","pitch","MapPane","Map","accessToken","container","hash","PHT","center","minZoom","bearing","interactive","localIdeographFontFamily","deckgl","Deck","gl","painter","context","layers","initialViewState","addControl","FullscreenControl","NavigationControl","on","setTerrain","setSky","point","x0","x","y0","y","x1","y1","PI","cos","sin","className","ref","STD","updateGeojsonLayer","mapobj","addSource","data","addLayer","source","id","paint","layout","turf","time","dd","setTimeout","alongRoute","camera","getFreeCameraOptions","MercatorCoordinate","fromLngLat","lng","lat","lookAtPoint","setFreeCameraOptions","src","setData","itemData","fileRead","url","alt","axios","get","then","res","stringify","MainListItems","d3","ImageList","cols","ImageListItem","ListSubheader","component","item","srcSet","process","img","loading","ImageListItemBar","title","subtitle","date","actionIcon","IconButton","sx","aria-label","SimpleDialog","onClose","selectedValue","open","Dialog","DialogTitle","frameBorder","allow","allowFullScreen","YoutubeDialog","React","useState","setOpen","size","Copyright","Typography","align","Link","href","Date","getFullYear","handleDialogOpen","useStyles","makeStyles","theme","appBar","spacing","flex","img_style","Transition","forwardRef","Slide","direction","FullScreenDialog","classes","isLoadwidgets","handleClose","setup","fullScreen","TransitionComponent","AppBar","Toolbar","edge","Box","textAlign","fontSize","margin","fname","registDialogOpen","Follow","useEffect","s","document","createElement","setAttribute","body","appendChild","data-show-count","gpxParser","require","dialog","toolbar","marginTop","backgroundColor","box","textField","fontfamily","image","button","RegistDialog","startDate","setStartDate","photo_src","setPhotoSrc","route_src","setJson","fileProc","obj","endsWith","gpx","toGeoJSON","post","headers","accept","withCredentials","AccessControlAllowOrigin","AccessControlAllowMethods","preflightContinue","console","log","catch","error","TextField","placeholder","autoComplete","fileInput","getElementById","fileReader","FileReader","onchange","file","files","name","toLowerCase","readAsText","onload","result","click","startIcon","selected","readAsDataURL","colSpan","drawerWidth","root","display","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","boxSizing","drawerHeader","alignItems","mixins","justifyContent","content","flexGrow","contentShift","toolbarButtons","current_map","MAPS","changeMap","length","terrain","setStyle","Dashboard","useTheme","handleDrawerOpen","handleDrawerClose","CssBaseline","clsx","noWrap","Grid","Divider","orientation","flexItem","Tooltip","placement","Drawer","anchor","paper","List","Container","maxWidth","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.74619b40.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\nimport {startMovie,stopMovie,setPhase,ieRunning,setSpeed} from './MapPane'\r\n\r\nexport let setSlider;\r\nexport let endRunning;\r\nlet setRunning;\r\n\r\nlet spId=0;\r\nlet speedChange;\r\n\r\nexport default class ControlBar extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          play_state: \"開始\",\r\n          val:0,\r\n          label:\"低速\"\r\n        }\r\n    };\r\n\r\n    componentDidMount(){\r\n        setSlider=(value)=>{\r\n            this.setState({val:Math.ceil(value*100)});\r\n        };\r\n        endRunning=()=>{\r\n            stopMovie();\r\n            this.setState({play_state: \"開始\"});\r\n        };\r\n        setRunning=()=>{\r\n            if(this.state.play_state===\"開始\"){\r\n                startMovie();\r\n                this.setState({play_state: \"停止\"});\r\n            }else{\r\n                stopMovie();\r\n                this.setState({play_state: \"開始\"});\r\n            }\r\n        };\r\n        speedChange=()=>{\r\n            spId=(spId+1)%3;\r\n            if(spId===0){\r\n                setSpeed(1.0);\r\n                this.setState({label:\"低速\"});\r\n            }else if(spId===1){\r\n                setSpeed(2.0);\r\n                this.setState({label:\"中速\"});\r\n            }else{\r\n                setSpeed(3.0);\r\n                this.setState({label:\"高速\"});\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <div style={bar_style}>\r\n        <ListItem>\r\n        <Button variant=\"contained\" color=\"primary\" style={{marginRight:\"20px\"}} onClick={setRunning}>{this.state.play_state}</Button>\r\n        <Slider\r\n          value={this.state.val}\r\n          getAriaValueText={onChangeProgress}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          marks\r\n          min={0}\r\n          max={100}\r\n          onChange={onChangeVal}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" style={{marginLeft:\"20px\"}} onClick={speedChange}>{this.state.label}</Button>\r\n        </ListItem>\r\n        </div>;\r\n    };\r\n}\r\n\r\nconst onChangeProgress=(value)=>{\r\n\r\n};\r\n\r\nconst onChangeVal=(val)=>{\r\n    if(!ieRunning())setPhase(val.target.value/100.0);\r\n};\r\n\r\nconst bar_style = {\r\n    float: \"left\",\r\n    width: \"96%\", \r\n    lineHeight: \"32px\",\r\n    borderRadius: 4,\r\n    border: \"none\",\r\n    padding: \"0px 20px 0px 20px\",\r\n    color: \"#fff\",\r\n    background: \"#ffffff88\",\r\n    position: \"absolute\",\r\n    bottom: 35,\r\n    left: \"2%\",\r\n    zindex:255\r\n};  ","import React, { Component } from 'react';\r\n//import mapbox from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './MapPane.css';\r\nimport {Deck} from '@deck.gl/core';\r\nimport * as turf from '@turf/turf'\r\nimport {setSlider,endRunning} from './ControlBar';\r\n\r\nimport mapbox from 'mapbox-gl/dist/mapbox-gl-csp';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\r\nmapbox.workerClass = MapboxWorker;\r\n\r\nlet targetRoute;\r\nlet map;\r\nlet cameraAltitude = 500;\r\nlet routeDistance;\r\nlet speed;\r\nlet start;\r\nlet running=false;\r\nlet phase;\r\nlet angle=0.0;\r\nlet camera_angle=[-0.005,-0.005];\r\nlet speedMul=1.0;\r\nlet pointer;\r\nlet angleVal=0;\r\n\r\n\r\nconst dem={\r\n    \"type\": \"raster-dem\",\r\n    \"tiles\": [\r\n//      \"https://cyberjapandata.gsi.go.jp/xyz/dem_png/{z}/{x}/{y}.png\"\r\n      \"https://www.termat.net/dem/{z}/{x}/{y}\"\r\n    ],\r\n    \"tileSize\": 256,\r\n    \"maxzoom\": 14,\r\n    \"attribution\": \"<a href='https://maps.gsi.go.jp/development/ichiran.html'>地理院タイル</a>\"\r\n  };\r\n\r\n\r\nexport const setSpeed=(val)=>{\r\n    speedMul=val;\r\n}\r\n\r\nexport const ieRunning=()=>{\r\n    return running;\r\n};\r\n\r\nexport const jumpTo=(data)=>{\r\n    map.jumpTo({center: data});\r\n};\r\n\r\nconst propcLine=(c)=>{\r\n    c.forEach(e =>{\r\n        targetRoute.push(e);\r\n    });\r\n}\r\n\r\nexport const parseGeojson=(str)=>{\r\n    stopMovie();\r\n    let json=JSON.parse(str);\r\n    targetRoute=[];\r\n\r\n    let array=json.features;\r\n    array.forEach(e => {\r\n        let c=e.geometry.coordinates;\r\n        if(e.geometry.type===\"Point\"){\r\n            targetRoute.push(c);\r\n        }else if(e.geometry.type===\"LineString\"){\r\n            propcLine(c);\r\n        }\r\n    });\r\n    if (map.getLayer('line'))map.removeLayer('line');\r\n    if (map.getSource('trace'))map.removeSource('trace');\r\n    if (map.getLayer('point'))map.removeLayer('point');\r\n    if (map.getSource('point'))map.removeSource('point');\r\n    setGeojsonLayer(map);\r\n    fitBounds();\r\n    start=null;\r\n    phase=0.0;\r\n};\r\n\r\nexport const setPhase=(val)=>{\r\n    phase=val;\r\n    if(phase===0.0)start=null;\r\n    if(targetRoute)requestAnimationFrame(frame);\r\n}\r\n\r\nexport const startMovie=()=>{\r\n    running=true;\r\n    if(targetRoute)requestAnimationFrame(frame);\r\n};\r\n\r\nexport const stopMovie=()=>{\r\n    running=false;\r\n};\r\n\r\nexport const fitBounds=()=>{\r\n    if(!targetRoute)return;\r\n    let xmin=100000;\r\n    let xmax=-10000;\r\n    let ymin=100000;\r\n    let ymax=-10000;\r\n    targetRoute.forEach(element => {\r\n        xmin=Math.min(xmin,element[0]);\r\n        xmax=Math.max(xmax,element[0]);\r\n        ymin=Math.min(ymin,element[1]);\r\n        ymax=Math.max(ymax,element[1]);\r\n    });\r\n    map.fitBounds([\r\n        [xmin, ymin],\r\n        [xmax, ymax]\r\n    ]);\r\n};\r\n\r\nexport const changeStyle=(style)=>{\r\n    if(style.terrain){\r\n        delete style.terrain\r\n    }    \r\n    map.setStyle(style);\r\n    map.on('style.load', () => {\r\n        setTerrain(map);\r\n        setSky(map);\r\n        if(targetRoute)updateGeojsonLayer(map);\r\n    });\r\n};\r\n\r\nconst viewState = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    longitude: 139.692704,\r\n    latitude: 35.689526,\r\n    zoom: 14,\r\n    maxZoom: 18,\r\n    pitch: 65\r\n };\r\n\r\nexport default class MapPane extends Component {\r\n//    static SAT='mapbox://styles/mapbox/satellite-v9';\r\n    static STD='/potaling/std.json';\r\n    static PHT= {\r\n            \"version\": 8,\r\n            \"sources\": {\r\n                \"t_pale\": {\r\n                    \"type\": \"raster\",\r\n                    \"tiles\": [\r\n                        \"https://cyberjapandata.gsi.go.jp/xyz/seamlessphoto/{z}/{x}/{y}.jpg\"\r\n                    ],\r\n                    \"tileSize\": 256,\r\n                    \"attribution\": \"<a href='https://maps.gsi.go.jp/development/ichiran.html'>地理院タイル（全国最新写真）</a>\"\r\n                }\r\n            },\r\n            \"layers\": [{\r\n                \"id\": \"t_pale\",\r\n                \"type\": \"raster\",\r\n                \"source\": \"t_pale\",\r\n                \"minzoom\": 8,\r\n                \"maxzoom\": 18\r\n            }]\r\n        };\r\n\r\n    componentDidMount() {\r\n        map = new mapbox.Map({\r\n            accessToken:'pk.eyJ1IjoidGVybWF0IiwiYSI6ImNrcGprNXE2ajBjdmQybnFyMmI5d3lrN2UifQ.EyZTUEX49xUnq6i2y0Na2Q',\r\n            container: this.container,\r\n            hash: true,\r\n            style: MapPane.PHT,\r\n            center: [139.692704, 35.689526], \r\n            zoom: 14,\r\n            maxZoom: 18,\r\n            minZoom: 8,\r\n            pitch: 65,\r\n            bearing: 0,\r\n            interactive: true,\r\n            localIdeographFontFamily: false,\r\n//            antialias: true \r\n        });\r\n\r\n        this.deckgl = new Deck({\r\n            gl: map.painter.context.gl,\r\n            layers: [],\r\n            initialViewState:viewState\r\n        });\r\n\r\n        map.addControl(new mapbox.FullscreenControl());\r\n        map.addControl(new mapbox.NavigationControl());\r\n\r\n        map.on('load', () => {\r\n            setTerrain(map);\r\n            setSky(map);\r\n            setGeojsonLayer(map);\r\n        });\r\n\r\n        map.on('mousedown', (e)=> {\r\n            pointer=e.point;\r\n        });\r\n        map.on('mouseup', (e)=> {\r\n            pointer=null;\r\n        });\r\n        map.on('mouseout', (e)=> {\r\n            pointer=null;\r\n        });\r\n        map.on('mousemove', (e)=> {\r\n            if(running&&pointer){\r\n                let x0=pointer.x;\r\n                let y0=pointer.y;\r\n                let x1=e.point.x;\r\n                let y1=e.point.y;\r\n                if(y1>y0){\r\n                    cameraAltitude=Math.min(2000,cameraAltitude+20);\r\n                }else{\r\n                    cameraAltitude=Math.max(200,cameraAltitude-20);\r\n                }\r\n                if(x1>x0){\r\n                    angleVal=(angleVal+2)%360;\r\n                    angle=(angleVal/180.0)*Math.PI;\r\n                    camera_angle=[\r\n                        -0.005*Math.cos(angle)-(-0.005)*Math.sin(angle),\r\n                        -0.005*Math.sin(angle)+(-0.005)*Math.cos(angle)\r\n                    ];\r\n                }else{\r\n                    angleVal=(angleVal-2)%360;\r\n                    angle=(angleVal/180.0)*Math.PI;\r\n                    camera_angle=[\r\n                        -0.005*Math.cos(angle)-(-0.005)*Math.sin(angle),\r\n                        -0.005*Math.sin(angle)+(-0.005)*Math.cos(angle)\r\n                    ];\r\n                }\r\n                if(pointer)pointer=e.point;\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div className={'map'} ref={(e) => (this.container = e)} />;\r\n    }\r\n}\r\n\r\nconst updateGeojsonLayer=(mapobj)=>{\r\n    if (!mapobj.getSource('trace')){\r\n        mapobj.addSource('trace', {\r\n            type: 'geojson',\r\n            data: {\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'LineString',\r\n                'coordinates': targetRoute\r\n                }\r\n            }\r\n        });\r\n    }\r\n    if (!mapobj.getLayer('line')){\r\n        mapobj.addLayer({\r\n            type: 'line',\r\n            source: 'trace',\r\n            id: 'line',\r\n            paint: {\r\n                'line-color': 'orange',\r\n                'line-width': 5\r\n            },\r\n            layout: {\r\n                'line-cap': 'round',\r\n                'line-join': 'round'\r\n            }\r\n        });\r\n    }\r\n    if (!mapobj.getSource('point')){\r\n        let point = {\r\n            'type': 'FeatureCollection',\r\n            'features': [{\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': targetRoute[0]\r\n                }\r\n            }]\r\n        };\r\n        mapobj.addSource('point', {\r\n            'type': 'geojson',\r\n            'data': point \r\n        });\r\n    }\r\n    if (!mapobj.getLayer('point')){\r\n        mapobj.addLayer({\r\n            'id': 'point',\r\n            'source': 'point',\r\n            'type': 'circle',\r\n            'paint': {\r\n                'circle-color': \"#ff0000\",\r\n                'circle-radius':8,\r\n                'circle-stroke-width': 4,\r\n                'circle-stroke-opacity': 0.05\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nconst setGeojsonLayer=(mapobj)=>{\r\n    if(targetRoute){\r\n        mapobj.addSource('trace', {\r\n            type: 'geojson',\r\n            data: {\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'LineString',\r\n                'coordinates': targetRoute\r\n                }\r\n            }\r\n        });\r\n        mapobj.addLayer({\r\n            type: 'line',\r\n            source: 'trace',\r\n            id: 'line',\r\n            paint: {\r\n                'line-color': 'orange',\r\n                'line-width': 5\r\n            },\r\n            layout: {\r\n                'line-cap': 'round',\r\n                'line-join': 'round'\r\n            }\r\n        });\r\n        let point = {\r\n            'type': 'FeatureCollection',\r\n            'features': [{\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': targetRoute[0]\r\n                }\r\n            }]\r\n        };\r\n        mapobj.addSource('point', {\r\n            'type': 'geojson',\r\n            'data': point \r\n        });\r\n        mapobj.addLayer({\r\n            'id': 'point',\r\n            'source': 'point',\r\n            'type': 'circle',\r\n            'paint': {\r\n                'circle-color': \"#ff0000\",\r\n                'circle-radius':8,\r\n                'circle-stroke-width': 4,\r\n                'circle-stroke-opacity': 0.05\r\n            },\r\n        });\r\n        routeDistance = turf.length(turf.lineString(targetRoute));\r\n        speed=1/((routeDistance/10)*60000);\r\n    }\r\n};\r\n\r\nconst setTerrain=(mapobj)=>{\r\n    if (!mapobj.getSource('mapbox-dem')){\r\n        /*\r\n        mapobj.addSource('mapbox-dem', {\r\n            'type': 'raster-dem',\r\n            'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\r\n            'tileSize': 512,\r\n            'maxzoom': 14\r\n        });\r\n        mapobj.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\r\n        */\r\n        mapobj.addSource('mapbox-dem', dem);\r\n        mapobj.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\r\n    }\r\n};\r\n\r\nconst setSky=(mapobj)=>{\r\n    if (!mapobj.getLayer('sky')){\r\n        mapobj.addLayer({\r\n            'id': 'sky',\r\n            'type': 'sky',\r\n            'paint': {\r\n            'sky-type': 'atmosphere',\r\n            'sky-atmosphere-sun': [0.0, 0.0],\r\n            'sky-atmosphere-sun-intensity': 15\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n/*\r\nconst checkView=()=>{\r\n    if(!targetRoute)return;\r\n    if(!phase)phase=0;\r\n    let alongRoute = turf.along(\r\n        turf.lineString(targetRoute),\r\n        routeDistance * phase\r\n    ).geometry.coordinates;\r\n    let camera = map.getFreeCameraOptions();\r\n    camera.position = mapbox.MercatorCoordinate.fromLngLat({\r\n        lng: alongRoute[0]+camera_angle[0],\r\n        lat: alongRoute[1]+camera_angle[1]\r\n        },\r\n        cameraAltitude\r\n    ); \r\n    camera.lookAtPoint({\r\n        lng: alongRoute[0],\r\n        lat: alongRoute[1]\r\n    });\r\n    map.setFreeCameraOptions(camera);\r\n    let point = {\r\n        'type': 'FeatureCollection',\r\n        'features': [{\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'Point',\r\n                'coordinates': alongRoute\r\n            }\r\n        }]\r\n    };\r\n    map.getSource('point').setData(point);\r\n};\r\n*/\r\n\r\nconst frame=(time)=>{\r\n    if (!start){\r\n        start = time;\r\n        phase=0.0;\r\n    }else{\r\n        let dd=time-start;\r\n        start=time;\r\n        phase=phase+speed*dd*speedMul;\r\n    }\r\n    setSlider(phase);\r\n    if (phase >= 1) {\r\n        setTimeout(function () {\r\n            running=false;\r\n            endRunning();\r\n        }, 1500);\r\n    }\r\n    let alongRoute = turf.along(\r\n        turf.lineString(targetRoute),\r\n        routeDistance * phase\r\n    ).geometry.coordinates;\r\n    let camera = map.getFreeCameraOptions();\r\n    camera.position = mapbox.MercatorCoordinate.fromLngLat({\r\n        lng: alongRoute[0]-camera_angle[0],\r\n        lat: alongRoute[1]-camera_angle[1]\r\n        },\r\n        cameraAltitude\r\n    ); \r\n    camera.lookAtPoint({\r\n        lng: alongRoute[0],\r\n        lat: alongRoute[1]\r\n    });\r\n    map.setFreeCameraOptions(camera);\r\n    let point = {\r\n        'type': 'FeatureCollection',\r\n        'features': [{\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'Point',\r\n                'coordinates': alongRoute\r\n            }\r\n        }]\r\n    };\r\n    let src=map.getSource('point');\r\n    if(src)src.setData(point);\r\n    if(running)requestAnimationFrame(frame);\r\n};\r\n","import React, {Component} from 'react';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {parseGeojson} from './MapPane'\nimport axios from 'axios';\nimport * as d3 from 'd3';\n\nconst itemData = [];\n\nconst fileRead=(data)=>{\n//  let url=\"https://termat.github.io/potaling/geojson/\"+data.target.alt;\n  let url=\"/potaling/geojson/\"+data.target.alt;\n  axios.get(url)\n  .then(res => {\n    const val = res.data;\n    let str=JSON.stringify(val);\n    parseGeojson(str)\n  });\n};\n\nexport default class MainListItems extends Component{\n  componentDidMount() {\n    let url=\"/potaling/pota_data.csv\";\n    d3.csv(url, function(data) {\n      itemData.push(data);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n      <ImageList cols={1}>\n        <ImageListItem key=\"Subheader\">\n          <ListSubheader component=\"div\">ポタリングデータ</ListSubheader>\n        </ImageListItem>\n        {itemData.map((item) => (\n          <ImageListItem key={item.img}>\n            <img\n              srcSet={`${process.env.PUBLIC_URL}/images/${item.img}`}\n              alt={item.json}\n              loading=\"lazy\"\n              onClick={fileRead}\n            />\n            <ImageListItemBar\n              title={item.title}\n              subtitle={item.date}\n              actionIcon={\n                <IconButton\n                  sx={{ color: 'rgba(255, 255, 255, 0.54)' }}\n                  aria-label={`info about ${item.title}`}\n                >\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </ImageListItem>\n        ))}\n      </ImageList>\n    </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">アプリの使い方</DialogTitle>\r\n      <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/qSJzxQrFlvE\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n     </Dialog>\r\n  );\r\n}\r\n\r\nexport default function YoutubeDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n      <div>\r\n      <Button variant=\"contained\" size=\"large\" onClick={handleClickOpen}>　使い方　</Button>\r\n      <SimpleDialog open={open} onClose={handleClose} />\r\n      </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport YotubeDialog from './SimpleDialog'\r\nimport {setup} from './Dashboard'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        t.matsuoka\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst img_style = {\r\n  width: \"100%\" \r\n}; \r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport let handleDialogOpen;\r\n\r\nexport default function FullScreenDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  handleDialogOpen = () => {\r\n    isLoadwidgets=false;\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setup();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <DirectionsBikeIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title} onClick={handleClose}>\r\n              ポタリングの記録\r\n            </Typography>\r\n            <div style={{marginRight:\"10px\"}} ><Follow /></div>\r\n            <div style={{marginRight:\"30px\"}}><a href=\"https://twitter.com/share\" className=\"twitter-share-button\" style={{marginRight:\"20px\"}}>Tweet</a></div>\r\n            <CloseIcon onClick={handleClose} />\r\n            <Button color=\"inherit\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n          <img src={`${process.env.PUBLIC_URL}/images/back.jpg`} style={img_style} alt={'top'} />\r\n          <Box textAlign=\"center\">\r\n          <h1>ポタリングした地域を3D地図で俯瞰する実験サイトです。</h1>\r\n          <p style={{fontSize: \"20px\"}}>ポタリング（自転車散歩）した地域を俯瞰してみたいと思い作成したWebアプリです。<br />\r\n            データ（geojson/gpx）を読み込むと、3D地図上で経路の俯瞰画像が表示されます。<br />\r\n            実際に走った経路を俯瞰してみると小さな発見があって結構面白いです。</p>\r\n          <Button variant=\"contained\" style={{margin:\"10px\"}} size=\"large\" onClick={handleClose}>　開　始　</Button>\r\n          <YotubeDialog />\r\n          </Box>\r\n        </div>\r\n        <br />\r\n        <Copyright />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nlet isLoadwidgets = false;\r\nconst Follow = () => {\r\n  React.useEffect(() => {\r\n    if (!isLoadwidgets) {\r\n      const s = document.createElement(\"script\");\r\n      s.setAttribute(\"src\", \"https://platform.twitter.com/widgets.js\");\r\n      document.body.appendChild(s);\r\n      isLoadwidgets = true;\r\n    }\r\n  }, []);\r\n  return (\r\n    <a href=\"https://twitter.com/t_mat?ref_src=twsrc%5Etfw\" className=\"twitter-follow-button\" data-show-count=\"false\">Follow @t_mat</a>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Box from '@material-ui/core/Box';\r\nimport DatePicker from \"react-datepicker\";\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nlet fname;\r\nlet gpxParser = require('gpxparser');\r\n\r\nconst ALLOWED_METHODS = [\r\n    'GET',\r\n    'POST',\r\n    'PUT',\r\n    'PATCH',\r\n    'DELETE',\r\n    'HEAD',\r\n    'OPTIONS'\r\n];\r\n\r\nconst ALLOWED_ORIGINS = [\r\n    'https://127.0.0.1:3000',\r\n    'https://127.0.0.1:3001'\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialog: {\r\n        padding: \"0px\",\r\n      },\r\n    toolbar: {\r\n        height:\"60px\",\r\n        marginTop:\"-20px\",\r\n        color: \"#fff\",\r\n        backgroundColor: \"#3f51b5\"\r\n      },\r\n    title: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    box: {\r\n        width:\"380px\",\r\n        margin:\" 0 auto\"\r\n      },\r\n    textField:{\r\n        fontSize:\"16px\",\r\n        fontfamily:\"sans-serif\",\r\n    },\r\n    image:{\r\n        width:\"360px\",\r\n    },\r\n    button: {\r\n        fontSize:\"16px\",\r\n        fontfamily:\"sans-serif\",\r\n        margin: theme.spacing(1),\r\n        width:\"100%\",\r\n      },\r\n  }));\r\n\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n  \r\n \r\n  export let registDialogOpen;\r\n  \r\n  export default function RegistDialog() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [photo_src, setPhotoSrc] = useState(null);\r\n    const [route_src, setRouteSrc] = useState(null);\r\n    const [json, setJson] = useState(null);\r\n  \r\n    registDialogOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    const fileRead=()=>{\r\n        let fileInput = document.getElementById('file');\r\n        let fileReader = new FileReader();\r\n        fileInput.onchange = () => {\r\n            let file = fileInput.files[0];\r\n            if(!file||!file.name)return;\r\n            fname=file.name.toLowerCase();\r\n            fileReader.readAsText(file);\r\n        };\r\n        fileReader.onload = () => fileProc(fileReader.result);\r\n        fileInput.click();\r\n      };\r\n    \r\n      const fileProc=(obj)=>{\r\n        if(fname.endsWith(\".geojson\")){\r\n            setJson(obj);\r\n        }else if(fname.endsWith(\".json\")){\r\n            setJson(obj);\r\n        }else if(fname.endsWith(\".gpx\")){\r\n          let gpx=new gpxParser();\r\n          gpx.parse(obj);\r\n          obj=JSON.stringify(gpx.toGeoJSON());\r\n          setJson(obj);\r\n        }\r\n\r\n        axios.post(`http://localhost:4567/potaling/route`,obj,\r\n           {\r\n               headers: {'Content-Type': 'application/json'},\r\n               accept: \"application/json\",\r\n               withCredentials: false,\r\n               AccessControlAllowOrigin:\"*\",\r\n               AccessControlAllowMethods:\"GET,PUT,POST,DELETE,OPTIONS\",\r\n               preflightContinue: false,\r\n            })\r\n        .then(res => {\r\n          console.log(res);\r\n        })\r\n        .catch(function(error) {\r\n            console.log('ERROR!! occurred in Backend.')\r\n        });\r\n/*\r\n        const fetchOption = {\r\n            method: 'POST',\r\n            body: obj\r\n        };\r\n        const headers = new Headers();\r\n        headers.append('Access-Control-Allow-Origin', origin);\r\n        headers.append('Access-Control-Allow-Methods', ALLOWED_METHODS.join(','));\r\n        headers.append('Access-Control-Allow-Headers', 'Content-type,Accept,X-Custom-Header');\r\n        headers.append('Content-Type', 'application/json');\r\n        fetchOption['headers'] = headers;   \r\n\r\n        fetch(`http://localhost:4567/potaling/route`, fetchOption)\r\n        .then(res => {\r\n            console.log(res.status);\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n*/\r\n\r\n\r\n\r\n    };\r\n\r\n    const photoRead=()=>{\r\n        let fileInput = document.getElementById('file');\r\n        let fileReader = new FileReader();\r\n        fileInput.onchange = () => {\r\n            let file = fileInput.files[0];\r\n            if(!file||!file.name)return;\r\n            fname=file.name.toLowerCase();\r\n            fileReader.readAsDataURL(file);\r\n        };\r\n        fileReader.onload = () => setPhotoSrc(fileReader.result);\r\n        fileInput.click();\r\n      };\r\n\r\n    return (\r\n      <div>\r\n        <Dialog className={classes.dialog} open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <DialogTitle id=\"simple-dialog-title\" className={classes.toolbar}>\r\n        <Toolbar className={classes.toolbar}>\r\n              <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                <DirectionsBikeIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title} onClick={handleClose}>\r\n                データ登録\r\n              </Typography>\r\n              <CloseIcon onClick={handleClose} />\r\n        </Toolbar>\r\n        </DialogTitle>\r\n            <Box className={classes.box}>\r\n                <table align=\"center\">\r\n                    <tbody className={classes.textField}>\r\n                    <tr>\r\n                        <td>タイトル</td>\r\n                        <td><TextField className={classes.textField} id=\"title\" label=\"title\" placeholder=\"タイトル名\" variant=\"standard\"　autoComplete=\"off\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>データ　</td>\r\n                        <td><Button variant=\"contained\" onClick={fileRead} className={classes.button} startIcon={<FolderOpenIcon />}>読み込み</Button></td>\r\n                   </tr>\r\n                    <tr>\r\n                        <td>記録日　</td>\r\n                        <td><DatePicker className={classes.textField} selected={startDate} onChange={(date) => setStartDate(date)} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>写　真　</td>\r\n                        <td><Button variant=\"contained\" onClick={photoRead} className={classes.button} startIcon={<FolderOpenIcon />}>読み込み</Button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"2\"><img className={classes.image} src={route_src} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"2\"><img className={classes.image} src={photo_src} /></td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </Box>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MainListItems from './listItems';\nimport MapPane from './MapPane';\nimport ControlBar from './ControlBar';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MapIcon from '@material-ui/icons/Map';\nimport AllOutIcon from '@material-ui/icons/AllOut';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport {fitBounds,parseGeojson,changeStyle} from './MapPane'\nimport FullScreenDialog from './FullScreenDialog'\nimport {handleDialogOpen} from './FullScreenDialog'\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Grid from '@material-ui/core/Grid';\nimport RegistDialog from './RegistDialog'\nimport {registDialogOpen} from './RegistDialog'\n\nlet gpxParser = require('gpxparser');\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    height:'65px',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    boxSizing: 'border-box',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  toolbarButtons: {\n    marginLeft: 'auto',\n  },\n}));\n\n\nlet fname;\n\nconst fileRead=()=>{\n  let fileInput = document.getElementById('file');\n  let fileReader = new FileReader();\n  fileInput.onchange = () => {\n      let file = fileInput.files[0];\n      if(!file||!file.name)return;\n      fname=file.name.toLowerCase();\n      console.log(file.name);\n      console.log(file.size);\n      console.log(file.type);\n      fileReader.readAsText(file);\n  };\n  fileReader.onload = () => fileProc(fileReader.result);\n  fileInput.click();\n};\n\nconst fileProc=(obj)=>{\n  if(fname.endsWith(\".geojson\")){\n      parseGeojson(obj);\n  }else if(fname.endsWith(\".json\")){\n    parseGeojson(obj);\n  }else if(fname.endsWith(\".gpx\")){\n    let gpx=new gpxParser();\n    gpx.parse(obj);\n    parseGeojson(JSON.stringify(gpx.toGeoJSON()));\n  }\n};\n\nlet current_map=0;\n//let MAPS=[MapPane.PHT,MapPane.STD,MapPane.SAT];\nlet MAPS=[MapPane.PHT,MapPane.STD];\n\nconst changeMap=()=>{\n  current_map=(current_map+1)%MAPS.length;\n  changeStyle(MAPS[current_map]);\n}\n\nexport let setup;\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  setup=()=>{\n    handleDrawerOpen();\n    setTimeout(handleDrawerClose,1000);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            ポタリングの記録\n          </Typography>\n          <div className={classes.toolbarButtons}>\n          <Grid container alignItems=\"center\" className={classes.root}>\n          <Divider orientation=\"vertical\" flexItem />\n          <Tooltip title=\"Geojson読込\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={fileRead}>\n              <FolderOpenIcon />\n            </IconButton>\n            </Tooltip>\n            <input type=\"file\" id=\"file\" style={{ display: 'none'}}></input>\n            <Tooltip title=\"地図切替\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={changeMap}>\n              <MapIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"領域移動\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={fitBounds}>\n              <AllOutIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"トップページ\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={handleDialogOpen}>\n              <NotificationsIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"登録\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={registDialogOpen}>\n              <NotificationsIcon />\n            </IconButton>\n            </Tooltip>\n            <Divider orientation=\"vertical\" flexItem />\n            </Grid>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List><MainListItems /></List>\n        <Divider />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Container maxWidth=\"xl\" className={classes.container} onClick={handleDrawerClose} >\n          <MapPane />\n          <ControlBar /> \n        </Container>\n      </main>\n      <FullScreenDialog />\n      <RegistDialog />\n    </div>\n  );\n}\n","import React from 'react';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n      <Dashboard />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}