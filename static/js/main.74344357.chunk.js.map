{"version":3,"sources":["components/MapPane.js","components/listItems.js","components/FullScreenDialog.js","components/SearchResultDialog.js","components/ControlPanel.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["targetRoute","cameraRoute","map","routeDistance","cameraRouteDistance","start","phase","view_date","Date","animationDuration","cameraAltitude","running","angle","camera_angle","parseGeojson","str","stopMovie","json","JSON","parse","features","forEach","e","c","geometry","coordinates","push","getLayer","removeLayer","getSource","removeSource","setGeojsonLayer","fitBounds","changeDuration","val","rewind","requestAnimationFrame","frame","startMovie","xmin","xmax","ymin","ymax","element","Math","min","max","MapPane","mapbox","Map","accessToken","container","this","hash","style","SAT","center","zoom","maxZoom","minZoom","pitch","bearing","interactive","localIdeographFontFamily","deckgl","Deck","gl","painter","context","layers","addControl","FullscreenControl","NavigationControl","on","resize","setTerrain","setSky","className","ref","Component","STD","updateGeojsonLayer","mapobj","addSource","type","data","addLayer","source","id","paint","layout","point","turf","getSunPosition","getCenter","sunPos","SunCalc","getPosition","now","lat","lng","azimuth","PI","altitude","checkView","alongRoute","alongCamera","camera","getFreeCameraOptions","position","MercatorCoordinate","fromLngLat","lookAtPoint","setFreeCameraOptions","setData","time","setTimeout","src","itemData","fileRead","url","target","alt","axios","get","then","res","stringify","MainListItems","d3","ImageList","cols","ImageListItem","ListSubheader","component","item","srcSet","process","img","loading","onClick","ImageListItemBar","title","subtitle","date","actionIcon","IconButton","sx","color","aria-label","Copyright","Typography","variant","align","Link","href","getFullYear","handleDialogOpen","useStyles","makeStyles","theme","appBar","marginLeft","spacing","flex","img_style","width","Transition","React","forwardRef","props","Slide","direction","FullScreenDialog","classes","useState","open","setOpen","handleClose","Dialog","fullScreen","onClose","TransitionComponent","AppBar","Toolbar","edge","Button","Box","textAlign","fontSize","size","handleResDialogOpen","ControlPanerl","Divider","Tooltip","placement","ListItem","button","ListItemIcon","Slider","defaultValue","getAriaValueText","onChangeHeight","aria-labelledby","valueLabelDisplay","step","marks","onChangeAngle","onChangeDuration","value","cos","sin","float","lineHeight","borderRadius","border","padding","background","top","left","zindex","avatar","backgroundColor","blue","ResultDialog","handleListItemClick","coord","jumpTo","DialogTitle","List","obj","ListItemText","primary","properties","sarch_str","drawerWidth","root","display","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","boxSizing","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","toolbarButtons","search","length","list","fileInput","document","getElementById","fileReader","FileReader","onchange","file","files","console","log","name","readAsText","onload","result","click","current_map","changeMap","setStyle","changeStyle","Dashboard","useTheme","handleDrawerClose","CssBaseline","clsx","noWrap","Grid","orientation","flexItem","TextField","label","onChange","event","Drawer","anchor","paper","appBarSpacer","Container","maxWidth","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.74344357.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport mapbox from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './MapPane.css';\r\nimport {Deck} from '@deck.gl/core';\r\nimport * as turf from '@turf/turf'\r\nimport SunCalc from 'suncalc'\r\n\r\nconst view_date = new Date(2021, 5, 15, 12, 0, 0);\r\nlet targetRoute;\r\nlet cameraRoute;\r\nlet map;\r\nlet animationDuration = 240000;\r\nlet cameraAltitude = 500;\r\nlet routeDistance;\r\nlet cameraRouteDistance;\r\nlet start;\r\nlet running=false;\r\nlet phase;\r\nlet angle=0.0;\r\nlet camera_angle=[-0.005,-0.005];\r\n\r\nexport const jumpTo=(data)=>{\r\n    map.jumpTo({center: data});\r\n};\r\n\r\nexport const parseGeojson=(str)=>{\r\n    stopMovie();\r\n    let json=JSON.parse(str);\r\n    targetRoute=[];\r\n    cameraRoute=[];\r\n    let array=json.features;\r\n    array.forEach(e => {\r\n        let c=e.geometry.coordinates;\r\n        targetRoute.push(c);\r\n        cameraRoute.push(c);\r\n    });\r\n    if (map.getLayer('line'))map.removeLayer('line');\r\n    if (map.getSource('trace'))map.removeSource('trace');\r\n    if (map.getLayer('point'))map.removeLayer('point');\r\n    if (map.getSource('point'))map.removeSource('point');\r\n    setGeojsonLayer(map);\r\n    fitBounds();\r\n    start=null;\r\n    phase=0.0;\r\n};\r\n\r\nexport const changeHeight=(val)=>{\r\n    cameraAltitude=val;\r\n    if(!running)checkView();\r\n};\r\n\r\nexport const changeAngle=(val)=>{\r\n    angle=(val/180.0)*Math.PI;\r\n    camera_angle=[\r\n        -0.005*Math.cos(angle)-(-0.005)*Math.sin(angle),\r\n        -0.005*Math.sin(angle)+(-0.005)*Math.cos(angle)\r\n    ];\r\n    if(!running)checkView();\r\n};\r\n\r\nexport const changeDuration=(val)=>{\r\n    animationDuration=val;\r\n};\r\n\r\nexport const rewind=()=>{\r\n    start=null;\r\n    if(targetRoute)requestAnimationFrame(frame);\r\n}\r\n\r\nexport const startMovie=()=>{\r\n    running=true;\r\n    if(targetRoute)requestAnimationFrame(frame);\r\n};\r\n\r\nexport const stopMovie=()=>{\r\n    running=false;\r\n};\r\n\r\nexport const fitBounds=()=>{\r\n    if(!targetRoute)return;\r\n    let xmin=100000;\r\n    let xmax=-10000;\r\n    let ymin=100000;\r\n    let ymax=-10000;\r\n    targetRoute.forEach(element => {\r\n        xmin=Math.min(xmin,element[0]);\r\n        xmax=Math.max(xmax,element[0]);\r\n        ymin=Math.min(ymin,element[1]);\r\n        ymax=Math.max(ymax,element[1]);\r\n    });\r\n    map.fitBounds([\r\n        [xmin, ymin],\r\n        [xmax, ymax]\r\n    ]);\r\n};\r\n\r\nexport const changeStyle=(style)=>{   \r\n    map.setStyle(style);\r\n    map.on('style.load', () => {\r\n        map.resize();\r\n        setTerrain(map);\r\n        setSky(map);\r\n        if(targetRoute)updateGeojsonLayer(map);\r\n    });\r\n};\r\n\r\nexport default class MapPane extends Component {\r\n    static SAT='mapbox://styles/mapbox/satellite-v9';\r\n    static STD='std.json';\r\n\r\n    componentDidMount() {\r\n        map = new mapbox.Map({\r\n            accessToken:'pk.eyJ1IjoidGVybWF0IiwiYSI6ImNqdXBmYXk1aDBwMnI0MW8xNXZ3dzVkOGUifQ.8nBCHZrBDS50yJbykEE4Sg',\r\n            container: this.container,\r\n            hash: true,\r\n            style: MapPane.SAT,\r\n            center: [139.692704, 35.689526], \r\n            zoom: 14,\r\n            maxZoom: 18,\r\n            minZoom: 8,\r\n            pitch: 65,\r\n            bearing: -180,\r\n            interactive: true,\r\n            localIdeographFontFamily: false\r\n        });\r\n\r\n        this.deckgl = new Deck({\r\n            gl: map.painter.context.gl,\r\n            layers: []\r\n        });\r\n\r\n        map.addControl(new mapbox.FullscreenControl());\r\n        map.addControl(new mapbox.NavigationControl());\r\n\r\n        map.on('load', () => {\r\n            map.resize();\r\n            setTerrain(map);\r\n            setSky(map);\r\n            setGeojsonLayer(map);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div className={'map'} ref={(e) => (this.container = e)} />;\r\n    }\r\n}\r\n\r\nconst updateGeojsonLayer=(mapobj)=>{\r\n    if (!mapobj.getSource('trace')){\r\n        mapobj.addSource('trace', {\r\n            type: 'geojson',\r\n            data: {\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'LineString',\r\n                'coordinates': targetRoute\r\n                }\r\n            }\r\n        });\r\n    }\r\n    if (!mapobj.getLayer('line')){\r\n        mapobj.addLayer({\r\n            type: 'line',\r\n            source: 'trace',\r\n            id: 'line',\r\n            paint: {\r\n                'line-color': 'orange',\r\n                'line-width': 5\r\n            },\r\n            layout: {\r\n                'line-cap': 'round',\r\n                'line-join': 'round'\r\n            }\r\n        });\r\n    }\r\n    if (!mapobj.getSource('point')){\r\n        let point = {\r\n            'type': 'FeatureCollection',\r\n            'features': [{\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': targetRoute[0]\r\n                }\r\n            }]\r\n        };\r\n        mapobj.addSource('point', {\r\n            'type': 'geojson',\r\n            'data': point \r\n        });\r\n    }\r\n    if (!mapobj.getLayer('point')){\r\n        mapobj.addLayer({\r\n            'id': 'point',\r\n            'source': 'point',\r\n            'type': 'circle',\r\n            'paint': {\r\n                'circle-color': \"#ff0000\",\r\n                'circle-radius':8,\r\n                'circle-stroke-width': 4,\r\n                'circle-stroke-opacity': 0.05\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nconst setGeojsonLayer=(mapobj)=>{\r\n    if(targetRoute){\r\n        mapobj.addSource('trace', {\r\n            type: 'geojson',\r\n            data: {\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'LineString',\r\n                'coordinates': targetRoute\r\n                }\r\n            }\r\n        });\r\n        mapobj.addLayer({\r\n            type: 'line',\r\n            source: 'trace',\r\n            id: 'line',\r\n            paint: {\r\n                'line-color': 'orange',\r\n                'line-width': 5\r\n            },\r\n            layout: {\r\n                'line-cap': 'round',\r\n                'line-join': 'round'\r\n            }\r\n        });\r\n        let point = {\r\n            'type': 'FeatureCollection',\r\n            'features': [{\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': targetRoute[0]\r\n                }\r\n            }]\r\n        };\r\n        mapobj.addSource('point', {\r\n            'type': 'geojson',\r\n            'data': point \r\n        });\r\n        mapobj.addLayer({\r\n            'id': 'point',\r\n            'source': 'point',\r\n            'type': 'circle',\r\n            'paint': {\r\n                'circle-color': \"#ff0000\",\r\n                'circle-radius':8,\r\n                'circle-stroke-width': 4,\r\n                'circle-stroke-opacity': 0.05\r\n            },\r\n        });\r\n        routeDistance = turf.lineDistance(turf.lineString(targetRoute));\r\n        cameraRouteDistance = turf.lineDistance(turf.lineString(cameraRoute));\r\n    }\r\n};\r\n\r\nconst setTerrain=(mapobj)=>{\r\n    if (!mapobj.getSource('mapbox-dem')){\r\n        mapobj.addSource('mapbox-dem', {\r\n            'type': 'raster-dem',\r\n            'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\r\n            'tileSize': 512,\r\n            'maxzoom': 14\r\n        });\r\n        mapobj.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\r\n    }\r\n};\r\n\r\nconst setSky=(mapobj)=>{\r\n    if (!mapobj.getLayer('sky')){\r\n        mapobj.addLayer({\r\n            'id': 'sky',\r\n            'type': 'sky',\r\n            'sky-type': 'solarNoon',\r\n            'paint': {\r\n                'sky-opacity': [\r\n                    'interpolate',\r\n                    ['linear'],\r\n                    ['zoom'],\r\n                    0, 0, 5, 0.3, 8, 1\r\n                ],\r\n                'sky-type': 'atmosphere',\r\n                'sky-atmosphere-sun': getSunPosition(mapobj),\r\n                'sky-atmosphere-sun-intensity': 5\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst getSunPosition=(mapobj)=>{\r\n    let center = mapobj.getCenter();\r\n    let sunPos = SunCalc.getPosition(\r\n        view_date || Date.now(),\r\n        center.lat,\r\n        center.lng\r\n    );\r\n    let sunAzimuth = 180 + (sunPos.azimuth * 180) / Math.PI;\r\n    let sunAltitude = 90 - (sunPos.altitude * 180) / Math.PI;\r\n    return [sunAzimuth, sunAltitude];\r\n};\r\n\r\nconst checkView=()=>{\r\n    if(!targetRoute)return;\r\n    if(!phase)phase=0;\r\n    let alongRoute = turf.along(\r\n        turf.lineString(targetRoute),\r\n        routeDistance * phase\r\n    ).geometry.coordinates;\r\n    let alongCamera = turf.along(\r\n        turf.lineString(cameraRoute),\r\n        cameraRouteDistance * phase\r\n    ).geometry.coordinates;\r\n    let camera = map.getFreeCameraOptions();\r\n    camera.position = mapbox.MercatorCoordinate.fromLngLat({\r\n        lng: alongCamera[0]+camera_angle[0],\r\n        lat: alongCamera[1]+camera_angle[1]\r\n        },\r\n        cameraAltitude\r\n    ); \r\n    camera.lookAtPoint({\r\n        lng: alongRoute[0],\r\n        lat: alongRoute[1]\r\n    });\r\n    map.setFreeCameraOptions(camera);\r\n    let point = {\r\n        'type': 'FeatureCollection',\r\n        'features': [{\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'Point',\r\n                'coordinates': alongRoute\r\n            }\r\n        }]\r\n    };\r\n    map.getSource('point').setData(point);\r\n};\r\n\r\nconst frame=(time)=>{\r\n    if (!start) start = time;\r\n    phase = (time - start) / animationDuration;\r\n    if (phase > 1) {\r\n        setTimeout(function () {\r\n            start = 0.0;\r\n        }, 1500);\r\n    }\r\n    let alongRoute = turf.along(\r\n        turf.lineString(targetRoute),\r\n        routeDistance * phase\r\n    ).geometry.coordinates;\r\n    let alongCamera = turf.along(\r\n        turf.lineString(cameraRoute),\r\n        cameraRouteDistance * phase\r\n    ).geometry.coordinates;\r\n    let camera = map.getFreeCameraOptions();\r\n    camera.position = mapbox.MercatorCoordinate.fromLngLat({\r\n        lng: alongCamera[0]-camera_angle[0],\r\n        lat: alongCamera[1]-camera_angle[1]\r\n        },\r\n        cameraAltitude\r\n    ); \r\n    camera.lookAtPoint({\r\n        lng: alongRoute[0],\r\n        lat: alongRoute[1]\r\n    });\r\n    map.setFreeCameraOptions(camera);\r\n\r\n    let point = {\r\n        'type': 'FeatureCollection',\r\n        'features': [{\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'Point',\r\n                'coordinates': alongRoute\r\n            }\r\n        }]\r\n    };\r\n    let src=map.getSource('point');\r\n    if(src)src.setData(point);\r\n    if(running)requestAnimationFrame(frame);\r\n};\r\n","import React, {Component} from 'react';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {parseGeojson} from './MapPane'\nimport axios from 'axios';\nimport * as d3 from 'd3';\n\nconst itemData = [];\n\nconst fileRead=(data)=>{\n  let url=\"https://termat.github.io/potaling/geojson/\"+data.target.alt;\n  axios.get(url)\n  .then(res => {\n    const val = res.data;\n    let str=JSON.stringify(val);\n    parseGeojson(str)\n  });\n};\n\nexport default class MainListItems extends Component{\n  componentDidMount() {\n    d3.csv(\"pota_data.csv\", function(data) {\n      itemData.push(data);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n      <ImageList cols={1}>\n        <ImageListItem key=\"Subheader\">\n          <ListSubheader component=\"div\">ポタリングデータ</ListSubheader>\n        </ImageListItem>\n        {itemData.map((item) => (\n          <ImageListItem key={item.img}>\n            <img\n              srcSet={`${process.env.PUBLIC_URL}/images/${item.img}`}\n              alt={item.json}\n              loading=\"lazy\"\n              onClick={fileRead}\n            />\n            <ImageListItemBar\n              title={item.title}\n              subtitle={item.date}\n              actionIcon={\n                <IconButton\n                  sx={{ color: 'rgba(255, 255, 255, 0.54)' }}\n                  aria-label={`info about ${item.title}`}\n                >\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </ImageListItem>\n        ))}\n      </ImageList>\n    </div>\n    );\n  }\n\n}\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        t.matsuoka\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst img_style = {\r\n  width: \"100%\" \r\n}; \r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport let handleDialogOpen;\r\n\r\nexport default function FullScreenDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  handleDialogOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <DirectionsBikeIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title} onClick={handleClose}>\r\n              ポタリングの記録（実験版）\r\n            </Typography>\r\n            <CloseIcon onClick={handleClose} />\r\n            <Button color=\"inherit\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n          <img src={`${process.env.PUBLIC_URL}/images/back.jpg`} style={img_style} />\r\n          <Box textAlign=\"center\">\r\n          <h1>折り畳み自転車『Brompton』で『ポタリング』した記録を表示する実験サイトです。</h1>\r\n          <p style={{fontSize: \"20px\"}}>ポタリングした地域を鳥瞰で眺めてみたいと思い作成した、経路記録（Geojson）を3D地図に表示するWebアプリです。<br />\r\n          ポタリングした経路を3D地図のアニメーションで閲覧することができます。<br />\r\n            登録データの他、任意のGeojson(Point)を読み込んで3D地図に表示することもできます。</p>\r\n          <Button variant=\"contained\" size=\"large\" onClick={handleClose}>開　始</Button>\r\n          </Box>\r\n        </div>\r\n        <br />\r\n        <Copyright />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport {jumpTo} from './MapPane';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nlet data=[];\r\nlet handleResDialogOpen;\r\n\r\nexport const showResultList=(list)=>{\r\n    data=list;\r\n    handleResDialogOpen();\r\n};\r\n\r\nexport default function ResultDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  handleResDialogOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleResDialogClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    const coord=value.geometry.coordinates;\r\n    jumpTo(coord);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleResDialogClose}>閉じる</Button>\r\n    　</DialogTitle>\r\n      <List>\r\n        {data.map((obj) => (\r\n          <ListItem button onClick={() => handleListItemClick(obj)} key={obj.properties.title}>\r\n            <ListItemText primary={obj.properties.title} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport FlipCameraIosIcon from '@material-ui/icons/FlipCameraIos';\r\nimport SwitchCameraIcon from '@material-ui/icons/SwitchCamera';\r\nimport {changeHeight,changeDuration,changeAngle} from './MapPane'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nexport default class ControlPanerl extends Component {\r\n\r\n    render() {\r\n        return <div style={style}>\r\n             <Divider />\r\n      <Tooltip title=\"視点の高さ\" placement=\"right\">\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <CameraAltIcon />\r\n        </ListItemIcon>\r\n        <Slider\r\n          defaultValue={500}\r\n          getAriaValueText={onChangeHeight}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={10}\r\n          marks\r\n          min={200}\r\n          max={2000}\r\n          style={{marginLeft:'0.8rem'}}\r\n        />\r\n      </ListItem>\r\n      </Tooltip>\r\n      <Tooltip title=\"視点の方向\" placement=\"right\">\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <FlipCameraIosIcon onClick={changeDuration} />\r\n        </ListItemIcon>\r\n        <Slider\r\n          defaultValue={0}\r\n          getAriaValueText={onChangeAngle}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={10}\r\n          marks\r\n          min={0}\r\n          max={360}\r\n          style={{marginLeft:'0.8rem'}}\r\n        />\r\n      </ListItem>\r\n      </Tooltip>\r\n      <Tooltip title=\"移動時間\" placement=\"right\">\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <SwitchCameraIcon />\r\n        </ListItemIcon>\r\n        <Slider\r\n          defaultValue={300}\r\n          getAriaValueText={onChangeDuration}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={20}\r\n          marks\r\n          min={80}\r\n          max={360}\r\n          style={{marginLeft:'0.8rem'}}\r\n        />\r\n      </ListItem>\r\n      </Tooltip>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst onChangeHeight=(value)=>{\r\n    changeHeight(value);\r\n};\r\n  \r\nconst onChangeAngle=(value)=>{\r\n    changeAngle(value);\r\n};\r\n  \r\nconst onChangeDuration=(value)=>{\r\n    changeDuration(value*1000);\r\n};\r\n\r\nconst style = {\r\n    float: \"left\",\r\n    width: 230, \r\n    lineHeight: \"32px\",\r\n    borderRadius: 4,\r\n    border: \"none\",\r\n    padding: \"0 4px\",\r\n    color: \"#fff\",\r\n    background: \"#ffffff88\",\r\n    position: \"absolute\",\r\n    top: 100,\r\n    left: 5,\r\n    zindex:255\r\n};  \r\n ","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MainListItems from './listItems';\nimport MapPane from './MapPane';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MapIcon from '@material-ui/icons/Map';\nimport AllOutIcon from '@material-ui/icons/AllOut';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport {rewind,startMovie,stopMovie,fitBounds,parseGeojson,changeStyle} from './MapPane'\nimport FullScreenDialog from './FullScreenDialog'\nimport {handleDialogOpen} from './FullScreenDialog'\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Grid from '@material-ui/core/Grid';\nimport ControlPanerl from './ControlPanel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport ResultDialog,{showResultList} from './SearchResultDialog'\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    boxSizing: 'border-box',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  toolbarButtons: {\n    marginLeft: 'auto',\n  },\n}));\n\nlet sarch_str;\n\nconst setSearchValue=(str)=>{\n  sarch_str=str;\n  console.log(sarch_str);\n}\n\nconst search=()=>{\n  if(!sarch_str)return;\n  if(sarch_str.length<1)return;\n  let url=\"https://msearch.gsi.go.jp/address-search/AddressSearch?q=\"+sarch_str;\n  axios.get(url)\n  .then(res => {\n    showResultList(res.data);\n  });\n};\n\nconst fileRead=()=>{\n  let fileInput = document.getElementById('file');\n  let fileReader = new FileReader();\n  fileInput.onchange = () => {\n      let file = fileInput.files[0];\n      console.log(file.name);\n      console.log(file.size);\n      console.log(file.type);\n      fileReader.readAsText(file);\n  };\n  fileReader.onload = () => parseGeojson(fileReader.result);\n  fileInput.click();\n};\n\nlet current_map=MapPane.SAT;\n\nconst changeMap=()=>{\n  if(current_map===MapPane.SAT){\n    current_map=MapPane.STD\n  }else{\n    current_map=MapPane.SAT\n  }\n  changeStyle(current_map);\n}\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            ポタリングの記録（実験版）\n          </Typography>\n          <div className={classes.toolbarButtons}>\n          <Grid container alignItems=\"center\" className={classes.root}>\n          <Divider orientation=\"vertical\" flexItem />\n          <Tooltip title=\"検索\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={search} >\n              <SearchIcon />\n            </IconButton>\n            </Tooltip>\n            <TextField id=\"input-search\" label=\"検索\" size=\"small\" style={{background:'white'}} onChange={(event) => setSearchValue(event.target.value)} />\n          <Divider orientation=\"vertical\" flexItem />\n          <Tooltip title=\"Geojson読込\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={fileRead}>\n              <FolderOpenIcon />\n            </IconButton>\n            </Tooltip>\n            <input type=\"file\" id=\"file\" style={{ display: 'none'}}></input>\n            <Tooltip title=\"地図切替\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={changeMap}>\n              <MapIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"領域移動\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={fitBounds}>\n              <AllOutIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"トップページ\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={handleDialogOpen}>\n              <NotificationsIcon />\n            </IconButton>\n            </Tooltip>\n            <Divider orientation=\"vertical\" flexItem />\n            <Tooltip title=\"開始\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={startMovie}>\n              <PlayCircleFilledIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"停止\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={stopMovie}>\n              <PauseCircleFilledIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"出発点に戻る\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={rewind}>\n              <SkipPreviousIcon />\n            </IconButton>\n            </Tooltip>\n            <Divider orientation=\"vertical\" flexItem />\n            </Grid>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List><MainListItems /></List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"xl\" className={classes.container} onClick={handleDrawerClose}>\n          <MapPane />\n          <ControlPanerl /> \n        </Container>\n      </main>\n      <FullScreenDialog />\n      <ResultDialog />\n    </div>\n  );\n}\n","import React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport Dashboard from './components/Dashboard';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nfunction App() {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>ポタリングの記録（実験版）</title>\n      </Helmet>\n      <Dashboard />\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}