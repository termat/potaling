{"version":3,"sources":["components/ControlBar.js","components/MapPane.js","components/listItems.js","components/SimpleDialog.js","components/FullScreenDialog.js","components/Dashboard.js","components/ControlPanel.js","App.js","reportWebVitals.js","index.js"],"names":["setSlider","endRunning","setRunning","speedChange","targetRoute","map","spId","ControlBar","props","state","play_state","val","label","value","setState","Math","ceil","stopMovie","startMovie","setSpeed","style","bar_style","ListItem","Button","variant","color","marginRight","onClick","this","Slider","getAriaValueText","onChangeProgress","aria-labelledby","valueLabelDisplay","step","marks","min","max","onChange","onChangeVal","marginLeft","Component","ieRunning","setPhase","target","float","width","lineHeight","borderRadius","border","padding","background","position","bottom","left","zindex","mapbox","workerClass","MapboxWorker","routeDistance","speed","start","phase","cameraAltitude","running","angle","camera_angle","speedMul","dem","parseGeojson","str","json","JSON","parse","features","forEach","e","c","geometry","coordinates","type","push","propcLine","getLayer","removeLayer","getSource","removeSource","setGeojsonLayer","fitBounds","requestAnimationFrame","frame","xmin","xmax","ymin","ymax","element","viewState","window","innerWidth","height","innerHeight","longitude","latitude","zoom","maxZoom","pitch","MapPane","Map","accessToken","container","hash","PHT","center","minZoom","bearing","interactive","localIdeographFontFamily","deckgl","Deck","gl","painter","context","layers","initialViewState","addControl","FullscreenControl","NavigationControl","on","setTerrain","setSky","className","ref","STD","updateGeojsonLayer","mapobj","addSource","data","addLayer","source","id","paint","layout","point","turf","checkView","alongRoute","camera","getFreeCameraOptions","MercatorCoordinate","fromLngLat","lng","lat","lookAtPoint","setFreeCameraOptions","setData","time","dd","setTimeout","src","itemData","fileRead","url","alt","axios","get","then","res","stringify","MainListItems","d3","ImageList","cols","ImageListItem","ListSubheader","component","item","srcSet","process","img","loading","ImageListItemBar","title","subtitle","date","actionIcon","IconButton","sx","aria-label","SimpleDialog","onClose","selectedValue","open","Dialog","DialogTitle","frameBorder","allow","allowFullScreen","YoutubeDialog","React","useState","setOpen","size","Copyright","Typography","align","Link","href","Date","getFullYear","handleDialogOpen","useStyles","makeStyles","theme","appBar","spacing","flex","img_style","Transition","forwardRef","Slide","direction","FullScreenDialog","classes","isLoadwidgets","handleClose","setup","fullScreen","TransitionComponent","AppBar","Toolbar","edge","Box","textAlign","fontSize","margin","fname","Follow","useEffect","s","document","createElement","setAttribute","body","appendChild","data-show-count","ControlPanerl","Divider","Tooltip","placement","ListItemIcon","defaultValue","onChangeHeight","onChangeAngle","isChange","PI","cos","sin","top","gpxParser","require","drawerWidth","root","display","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","boxSizing","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","toolbarButtons","fileInput","getElementById","fileReader","FileReader","onchange","file","files","name","toLowerCase","console","log","readAsText","onload","fileProc","result","click","obj","endsWith","gpx","toGeoJSON","current_map","MAPS","changeMap","terrain","setStyle","changeStyle","Dashboard","useTheme","handleDrawerOpen","handleDrawerClose","CssBaseline","clsx","noWrap","Grid","orientation","flexItem","Drawer","anchor","paper","List","Container","maxWidth","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.55f41063.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\nimport {startMovie,stopMovie,setPhase,ieRunning,setSpeed} from './MapPane'\r\n\r\nexport let setSlider;\r\nexport let endRunning;\r\nlet setRunning;\r\n\r\nlet spId=0;\r\nlet speedChange;\r\n\r\nexport default class ControlBar extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          play_state: \"開始\",\r\n          val:0,\r\n          label:\"低速\"\r\n        }\r\n    };\r\n\r\n    componentDidMount(){\r\n        setSlider=(value)=>{\r\n            this.setState({val:Math.ceil(value*100)});\r\n        };\r\n        endRunning=()=>{\r\n            stopMovie();\r\n            this.setState({play_state: \"開始\"});\r\n        };\r\n        setRunning=()=>{\r\n            if(this.state.play_state===\"開始\"){\r\n                startMovie();\r\n                this.setState({play_state: \"停止\"});\r\n            }else{\r\n                stopMovie();\r\n                this.setState({play_state: \"開始\"});\r\n            }\r\n        };\r\n        speedChange=()=>{\r\n            spId=(spId+1)%3;\r\n            if(spId===0){\r\n                setSpeed(1.0);\r\n                this.setState({label:\"低速\"});\r\n            }else if(spId===1){\r\n                setSpeed(2.0);\r\n                this.setState({label:\"中速\"});\r\n            }else{\r\n                setSpeed(3.0);\r\n                this.setState({label:\"高速\"});\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <div style={bar_style}>\r\n        <ListItem>\r\n        <Button variant=\"contained\" color=\"primary\" style={{marginRight:\"20px\"}} onClick={setRunning}>{this.state.play_state}</Button>\r\n        <Slider\r\n          value={this.state.val}\r\n          getAriaValueText={onChangeProgress}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          marks\r\n          min={0}\r\n          max={100}\r\n          onChange={onChangeVal}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" style={{marginLeft:\"20px\"}} onClick={speedChange}>{this.state.label}</Button>\r\n        </ListItem>\r\n        </div>;\r\n    };\r\n}\r\n\r\nconst onChangeProgress=(value)=>{\r\n\r\n};\r\n\r\nconst onChangeVal=(val)=>{\r\n    if(!ieRunning())setPhase(val.target.value/100.0);\r\n};\r\n\r\nconst bar_style = {\r\n    float: \"left\",\r\n    width: \"96%\", \r\n    lineHeight: \"32px\",\r\n    borderRadius: 4,\r\n    border: \"none\",\r\n    padding: \"0px 20px 0px 20px\",\r\n    color: \"#fff\",\r\n    background: \"#ffffff88\",\r\n    position: \"absolute\",\r\n    bottom: 35,\r\n    left: \"2%\",\r\n    zindex:255\r\n};  ","import React, { Component } from 'react';\r\n//import mapbox from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './MapPane.css';\r\nimport {Deck} from '@deck.gl/core';\r\nimport * as turf from '@turf/turf'\r\nimport {setSlider,endRunning} from './ControlBar';\r\n\r\nimport mapbox from 'mapbox-gl/dist/mapbox-gl-csp';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\r\nmapbox.workerClass = MapboxWorker;\r\n\r\nlet targetRoute;\r\nlet map;\r\nlet cameraAltitude = 500;\r\nlet routeDistance;\r\nlet speed;\r\nlet start;\r\nlet running=false;\r\nlet phase;\r\nlet angle=0.0;\r\nlet camera_angle=[-0.005,-0.005];\r\nlet speedMul=1.0;\r\n\r\n\r\nconst dem={\r\n    \"type\": \"raster-dem\",\r\n    \"tiles\": [\r\n//      \"https://cyberjapandata.gsi.go.jp/xyz/dem_png/{z}/{x}/{y}.png\"\r\n      \"https://www.termat.net/dem/{z}/{x}/{y}\"\r\n    ],\r\n    \"tileSize\": 256,\r\n    \"maxzoom\": 14,\r\n    \"attribution\": \"<a href='https://maps.gsi.go.jp/development/ichiran.html'>地理院タイル</a>\"\r\n  };\r\n\r\n\r\nexport const setSpeed=(val)=>{\r\n    speedMul=val;\r\n}\r\n\r\nexport const ieRunning=()=>{\r\n    return running;\r\n};\r\n\r\nexport const jumpTo=(data)=>{\r\n    map.jumpTo({center: data});\r\n};\r\n\r\nconst propcLine=(c)=>{\r\n    c.forEach(e =>{\r\n        targetRoute.push(e);\r\n    });\r\n}\r\n\r\nexport const parseGeojson=(str)=>{\r\n    stopMovie();\r\n    let json=JSON.parse(str);\r\n    targetRoute=[];\r\n\r\n    let array=json.features;\r\n    array.forEach(e => {\r\n        let c=e.geometry.coordinates;\r\n        if(e.geometry.type===\"Point\"){\r\n            targetRoute.push(c);\r\n        }else if(e.geometry.type===\"LineString\"){\r\n            propcLine(c);\r\n        }\r\n    });\r\n    if (map.getLayer('line'))map.removeLayer('line');\r\n    if (map.getSource('trace'))map.removeSource('trace');\r\n    if (map.getLayer('point'))map.removeLayer('point');\r\n    if (map.getSource('point'))map.removeSource('point');\r\n    setGeojsonLayer(map);\r\n    fitBounds();\r\n    start=null;\r\n    phase=0.0;\r\n};\r\n\r\nexport const setPhase=(val)=>{\r\n    phase=val;\r\n    if(phase===0.0)start=null;\r\n    if(targetRoute)requestAnimationFrame(frame);\r\n}\r\n\r\nexport const changeHeight=(val)=>{\r\n    cameraAltitude=val;\r\n    if(!running)checkView();\r\n};\r\n\r\nexport const changeAngle=(val)=>{\r\n    angle=(val/180.0)*Math.PI;\r\n    camera_angle=[\r\n        -0.005*Math.cos(angle)-(-0.005)*Math.sin(angle),\r\n        -0.005*Math.sin(angle)+(-0.005)*Math.cos(angle)\r\n    ];\r\n    if(!running)checkView();\r\n};\r\n\r\nexport const startMovie=()=>{\r\n    running=true;\r\n    if(targetRoute)requestAnimationFrame(frame);\r\n};\r\n\r\nexport const stopMovie=()=>{\r\n    running=false;\r\n};\r\n\r\nexport const fitBounds=()=>{\r\n    if(!targetRoute)return;\r\n    let xmin=100000;\r\n    let xmax=-10000;\r\n    let ymin=100000;\r\n    let ymax=-10000;\r\n    targetRoute.forEach(element => {\r\n        xmin=Math.min(xmin,element[0]);\r\n        xmax=Math.max(xmax,element[0]);\r\n        ymin=Math.min(ymin,element[1]);\r\n        ymax=Math.max(ymax,element[1]);\r\n    });\r\n    map.fitBounds([\r\n        [xmin, ymin],\r\n        [xmax, ymax]\r\n    ]);\r\n};\r\n\r\nexport const changeStyle=(style)=>{\r\n    if(style.terrain){\r\n        delete style.terrain\r\n    }    \r\n    map.setStyle(style);\r\n    map.on('style.load', () => {\r\n        setTerrain(map);\r\n        setSky(map);\r\n        if(targetRoute)updateGeojsonLayer(map);\r\n    });\r\n};\r\n\r\nconst viewState = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    longitude: 139.692704,\r\n    latitude: 35.689526,\r\n    zoom: 14,\r\n    maxZoom: 18,\r\n    pitch: 65\r\n };\r\n\r\nexport default class MapPane extends Component {\r\n//    static SAT='mapbox://styles/mapbox/satellite-v9';\r\n    static STD='/potaling/std.json';\r\n    static PHT= {\r\n            \"version\": 8,\r\n            \"sources\": {\r\n                \"t_pale\": {\r\n                    \"type\": \"raster\",\r\n                    \"tiles\": [\r\n                        \"https://cyberjapandata.gsi.go.jp/xyz/seamlessphoto/{z}/{x}/{y}.jpg\"\r\n                    ],\r\n                    \"tileSize\": 256,\r\n                    \"attribution\": \"<a href='https://maps.gsi.go.jp/development/ichiran.html'>地理院タイル（全国最新写真）</a>\"\r\n                }\r\n            },\r\n            \"layers\": [{\r\n                \"id\": \"t_pale\",\r\n                \"type\": \"raster\",\r\n                \"source\": \"t_pale\",\r\n                \"minzoom\": 8,\r\n                \"maxzoom\": 18\r\n            }]\r\n        };\r\n\r\n    componentDidMount() {\r\n        map = new mapbox.Map({\r\n            accessToken:'pk.eyJ1IjoidGVybWF0IiwiYSI6ImNqdXBmYXk1aDBwMnI0MW8xNXZ3dzVkOGUifQ.8nBCHZrBDS50yJbykEE4Sg',\r\n            container: this.container,\r\n            hash: true,\r\n            style: MapPane.PHT,\r\n            center: [139.692704, 35.689526], \r\n            zoom: 14,\r\n            maxZoom: 18,\r\n            minZoom: 8,\r\n            pitch: 65,\r\n            bearing: 0,\r\n            interactive: true,\r\n            localIdeographFontFamily: false,\r\n//            antialias: true \r\n        });\r\n\r\n        this.deckgl = new Deck({\r\n            gl: map.painter.context.gl,\r\n            layers: [],\r\n            initialViewState:viewState\r\n        });\r\n\r\n        map.addControl(new mapbox.FullscreenControl());\r\n        map.addControl(new mapbox.NavigationControl());\r\n\r\n        map.on('load', () => {\r\n/*\r\n            map.addLayer({\r\n                'id': 'vector-tile',\r\n                'type': 'line',\r\n                'minzoom': 8,\r\n                'maxzoom': 18,\r\n                'source': {\r\n                    'type':'vector',\r\n                    'tiles':[\r\n                        'https://cyberjapandata.gsi.go.jp/xyz/experimental_bvmap/{z}/{x}/{y}.pbf'\r\n                    ],\r\n                },\r\n                'source-layer': 'road',\r\n                    'layout': {\r\n                        'line-join': 'round',\r\n                        'line-cap': 'round',\r\n                    },\r\n                    'paint': {\r\n                        'line-color': '#ff69b4',\r\n                    'line-width': 3\r\n                }\r\n            });\r\n*/\r\n            setTerrain(map);\r\n            setSky(map);\r\n            setGeojsonLayer(map);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div className={'map'} ref={(e) => (this.container = e)} />;\r\n    }\r\n}\r\n\r\nconst updateGeojsonLayer=(mapobj)=>{\r\n    if (!mapobj.getSource('trace')){\r\n        mapobj.addSource('trace', {\r\n            type: 'geojson',\r\n            data: {\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'LineString',\r\n                'coordinates': targetRoute\r\n                }\r\n            }\r\n        });\r\n    }\r\n    if (!mapobj.getLayer('line')){\r\n        mapobj.addLayer({\r\n            type: 'line',\r\n            source: 'trace',\r\n            id: 'line',\r\n            paint: {\r\n                'line-color': 'orange',\r\n                'line-width': 5\r\n            },\r\n            layout: {\r\n                'line-cap': 'round',\r\n                'line-join': 'round'\r\n            }\r\n        });\r\n    }\r\n    if (!mapobj.getSource('point')){\r\n        let point = {\r\n            'type': 'FeatureCollection',\r\n            'features': [{\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': targetRoute[0]\r\n                }\r\n            }]\r\n        };\r\n        mapobj.addSource('point', {\r\n            'type': 'geojson',\r\n            'data': point \r\n        });\r\n    }\r\n    if (!mapobj.getLayer('point')){\r\n        mapobj.addLayer({\r\n            'id': 'point',\r\n            'source': 'point',\r\n            'type': 'circle',\r\n            'paint': {\r\n                'circle-color': \"#ff0000\",\r\n                'circle-radius':8,\r\n                'circle-stroke-width': 4,\r\n                'circle-stroke-opacity': 0.05\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nconst setGeojsonLayer=(mapobj)=>{\r\n    if(targetRoute){\r\n        mapobj.addSource('trace', {\r\n            type: 'geojson',\r\n            data: {\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'LineString',\r\n                'coordinates': targetRoute\r\n                }\r\n            }\r\n        });\r\n        mapobj.addLayer({\r\n            type: 'line',\r\n            source: 'trace',\r\n            id: 'line',\r\n            paint: {\r\n                'line-color': 'orange',\r\n                'line-width': 5\r\n            },\r\n            layout: {\r\n                'line-cap': 'round',\r\n                'line-join': 'round'\r\n            }\r\n        });\r\n        let point = {\r\n            'type': 'FeatureCollection',\r\n            'features': [{\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': targetRoute[0]\r\n                }\r\n            }]\r\n        };\r\n        mapobj.addSource('point', {\r\n            'type': 'geojson',\r\n            'data': point \r\n        });\r\n        mapobj.addLayer({\r\n            'id': 'point',\r\n            'source': 'point',\r\n            'type': 'circle',\r\n            'paint': {\r\n                'circle-color': \"#ff0000\",\r\n                'circle-radius':8,\r\n                'circle-stroke-width': 4,\r\n                'circle-stroke-opacity': 0.05\r\n            },\r\n        });\r\n        routeDistance = turf.length(turf.lineString(targetRoute));\r\n        speed=1/((routeDistance/10)*60000);\r\n    }\r\n};\r\n\r\nconst setTerrain=(mapobj)=>{\r\n    if (!mapobj.getSource('mapbox-dem')){\r\n        /*\r\n        mapobj.addSource('mapbox-dem', {\r\n            'type': 'raster-dem',\r\n            'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\r\n            'tileSize': 512,\r\n            'maxzoom': 14\r\n        });\r\n        mapobj.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\r\n        */\r\n        mapobj.addSource('mapbox-dem', dem);\r\n        mapobj.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\r\n    }\r\n};\r\n\r\nconst setSky=(mapobj)=>{\r\n    if (!mapobj.getLayer('sky')){\r\n        mapobj.addLayer({\r\n            'id': 'sky',\r\n            'type': 'sky',\r\n            'paint': {\r\n            'sky-type': 'atmosphere',\r\n            'sky-atmosphere-sun': [0.0, 0.0],\r\n            'sky-atmosphere-sun-intensity': 15\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst checkView=()=>{\r\n    if(!targetRoute)return;\r\n    if(!phase)phase=0;\r\n    let alongRoute = turf.along(\r\n        turf.lineString(targetRoute),\r\n        routeDistance * phase\r\n    ).geometry.coordinates;\r\n    let camera = map.getFreeCameraOptions();\r\n    camera.position = mapbox.MercatorCoordinate.fromLngLat({\r\n        lng: alongRoute[0]+camera_angle[0],\r\n        lat: alongRoute[1]+camera_angle[1]\r\n        },\r\n        cameraAltitude\r\n    ); \r\n    camera.lookAtPoint({\r\n        lng: alongRoute[0],\r\n        lat: alongRoute[1]\r\n    });\r\n    map.setFreeCameraOptions(camera);\r\n    let point = {\r\n        'type': 'FeatureCollection',\r\n        'features': [{\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'Point',\r\n                'coordinates': alongRoute\r\n            }\r\n        }]\r\n    };\r\n    map.getSource('point').setData(point);\r\n};\r\n\r\nconst frame=(time)=>{\r\n    if (!start){\r\n        start = time;\r\n        phase=0.0;\r\n    }else{\r\n        let dd=time-start;\r\n        start=time;\r\n        phase=phase+speed*dd*speedMul;\r\n    }\r\n    setSlider(phase);\r\n    if (phase >= 1) {\r\n        setTimeout(function () {\r\n            running=false;\r\n            endRunning();\r\n        }, 1500);\r\n    }\r\n    let alongRoute = turf.along(\r\n        turf.lineString(targetRoute),\r\n        routeDistance * phase\r\n    ).geometry.coordinates;\r\n    let camera = map.getFreeCameraOptions();\r\n    camera.position = mapbox.MercatorCoordinate.fromLngLat({\r\n        lng: alongRoute[0]-camera_angle[0],\r\n        lat: alongRoute[1]-camera_angle[1]\r\n        },\r\n        cameraAltitude\r\n    ); \r\n    camera.lookAtPoint({\r\n        lng: alongRoute[0],\r\n        lat: alongRoute[1]\r\n    });\r\n    map.setFreeCameraOptions(camera);\r\n    let point = {\r\n        'type': 'FeatureCollection',\r\n        'features': [{\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'Point',\r\n                'coordinates': alongRoute\r\n            }\r\n        }]\r\n    };\r\n    let src=map.getSource('point');\r\n    if(src)src.setData(point);\r\n    if(running)requestAnimationFrame(frame);\r\n};\r\n","import React, {Component} from 'react';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {parseGeojson} from './MapPane'\nimport axios from 'axios';\nimport * as d3 from 'd3';\n\nconst itemData = [];\n\nconst fileRead=(data)=>{\n//  let url=\"https://termat.github.io/potaling/geojson/\"+data.target.alt;\n  let url=\"/potaling/geojson/\"+data.target.alt;\n  axios.get(url)\n  .then(res => {\n    const val = res.data;\n    let str=JSON.stringify(val);\n    parseGeojson(str)\n  });\n};\n\nexport default class MainListItems extends Component{\n  componentDidMount() {\n    let url=\"/potaling/pota_data.csv\";\n    d3.csv(url, function(data) {\n      itemData.push(data);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n      <ImageList cols={1}>\n        <ImageListItem key=\"Subheader\">\n          <ListSubheader component=\"div\">ポタリングデータ</ListSubheader>\n        </ImageListItem>\n        {itemData.map((item) => (\n          <ImageListItem key={item.img}>\n            <img\n              srcSet={`${process.env.PUBLIC_URL}/images/${item.img}`}\n              alt={item.json}\n              loading=\"lazy\"\n              onClick={fileRead}\n            />\n            <ImageListItemBar\n              title={item.title}\n              subtitle={item.date}\n              actionIcon={\n                <IconButton\n                  sx={{ color: 'rgba(255, 255, 255, 0.54)' }}\n                  aria-label={`info about ${item.title}`}\n                >\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </ImageListItem>\n        ))}\n      </ImageList>\n    </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">アプリの使い方</DialogTitle>\r\n      <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/qSJzxQrFlvE\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n     </Dialog>\r\n  );\r\n}\r\n\r\nexport default function YoutubeDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n      <div>\r\n      <Button variant=\"contained\" size=\"large\" onClick={handleClickOpen}>　使い方　</Button>\r\n      <SimpleDialog open={open} onClose={handleClose} />\r\n      </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport YotubeDialog from './SimpleDialog'\r\nimport {setup} from './Dashboard'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        t.matsuoka\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst img_style = {\r\n  width: \"100%\" \r\n}; \r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport let handleDialogOpen;\r\n\r\nexport default function FullScreenDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  handleDialogOpen = () => {\r\n    isLoadwidgets=false;\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setup();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <DirectionsBikeIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title} onClick={handleClose}>\r\n              ポタリングの記録\r\n            </Typography>\r\n            <div style={{marginRight:\"10px\"}} ><Follow /></div>\r\n            <div style={{marginRight:\"30px\"}}><a href=\"https://twitter.com/share\" className=\"twitter-share-button\" style={{marginRight:\"20px\"}}>Tweet</a></div>\r\n            <CloseIcon onClick={handleClose} />\r\n            <Button color=\"inherit\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n          <img src={`${process.env.PUBLIC_URL}/images/back.jpg`} style={img_style} alt={'top'} />\r\n          <Box textAlign=\"center\">\r\n          <h1>ポタリングした地域を3D地図で俯瞰する実験サイトです。</h1>\r\n          <p style={{fontSize: \"20px\"}}>ポタリング（自転車散歩）した地域を俯瞰してみたいと思い作成したWebアプリです。<br />\r\n            データ（geojson/gpx）を読み込むと、3D地図上で経路の俯瞰画像が表示されます。<br />\r\n            実際に走った経路を俯瞰してみると小さな発見があって結構面白いです。</p>\r\n          <Button variant=\"contained\" style={{margin:\"10px\"}} size=\"large\" onClick={handleClose}>　開　始　</Button>\r\n          <YotubeDialog />\r\n          </Box>\r\n        </div>\r\n        <br />\r\n        <Copyright />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nlet isLoadwidgets = false;\r\nconst Follow = () => {\r\n  React.useEffect(() => {\r\n    if (!isLoadwidgets) {\r\n      const s = document.createElement(\"script\");\r\n      s.setAttribute(\"src\", \"https://platform.twitter.com/widgets.js\");\r\n      document.body.appendChild(s);\r\n      isLoadwidgets = true;\r\n    }\r\n  }, []);\r\n  return (\r\n    <a href=\"https://twitter.com/t_mat?ref_src=twsrc%5Etfw\" className=\"twitter-follow-button\" data-show-count=\"false\">Follow @t_mat</a>\r\n  );\r\n};\r\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MainListItems from './listItems';\nimport MapPane from './MapPane';\nimport ControlBar from './ControlBar';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MapIcon from '@material-ui/icons/Map';\nimport AllOutIcon from '@material-ui/icons/AllOut';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport {fitBounds,parseGeojson,changeStyle} from './MapPane'\nimport FullScreenDialog from './FullScreenDialog'\nimport {handleDialogOpen} from './FullScreenDialog'\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Grid from '@material-ui/core/Grid';\nimport ControlPanerl from './ControlPanel';\n\nlet gpxParser = require('gpxparser');\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    height:'65px',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    boxSizing: 'border-box',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  toolbarButtons: {\n    marginLeft: 'auto',\n  },\n}));\n\n\nlet fname;\n\nconst fileRead=()=>{\n  let fileInput = document.getElementById('file');\n  let fileReader = new FileReader();\n  fileInput.onchange = () => {\n      let file = fileInput.files[0];\n      if(!file||!file.name)return;\n      fname=file.name.toLowerCase();\n      console.log(file.name);\n      console.log(file.size);\n      console.log(file.type);\n      fileReader.readAsText(file);\n  };\n  fileReader.onload = () => fileProc(fileReader.result);\n  fileInput.click();\n};\n\nconst fileProc=(obj)=>{\n  if(fname.endsWith(\".geojson\")){\n      parseGeojson(obj);\n  }else if(fname.endsWith(\".json\")){\n    parseGeojson(obj);\n  }else if(fname.endsWith(\".gpx\")){\n    let gpx=new gpxParser();\n    gpx.parse(obj);\n    parseGeojson(JSON.stringify(gpx.toGeoJSON()));\n  }\n};\n\n\nlet current_map=0;\nlet MAPS=[MapPane.PHT,MapPane.STD];\n\nconst changeMap=()=>{\n  current_map=(current_map+1)%2;\n  changeStyle(MAPS[current_map]);\n}\n\nexport let setup;\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  setup=()=>{\n    handleDrawerOpen();\n    setTimeout(handleDrawerClose,1000);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            ポタリングの記録\n          </Typography>\n          <div className={classes.toolbarButtons}>\n          <Grid container alignItems=\"center\" className={classes.root}>\n          <Divider orientation=\"vertical\" flexItem />\n          <Tooltip title=\"Geojson読込\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={fileRead}>\n              <FolderOpenIcon />\n            </IconButton>\n            </Tooltip>\n            <input type=\"file\" id=\"file\" style={{ display: 'none'}}></input>\n            <Tooltip title=\"地図切替\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={changeMap}>\n              <MapIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"領域移動\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={fitBounds}>\n              <AllOutIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"トップページ\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={handleDialogOpen}>\n              <NotificationsIcon />\n            </IconButton>\n            </Tooltip>\n            <Divider orientation=\"vertical\" flexItem />\n            </Grid>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List><MainListItems /></List>\n        <Divider />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Container maxWidth=\"xl\" className={classes.container} onClick={handleDrawerClose} >\n          <MapPane />\n          <ControlPanerl /> \n          <ControlBar /> \n        </Container>\n      </main>\n      <FullScreenDialog />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport FlipCameraIosIcon from '@material-ui/icons/FlipCameraIos';\r\nimport {changeHeight,changeAngle} from './MapPane'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nexport default class ControlPanerl extends Component {\r\n\r\n    render() {\r\n        return <div style={style}>\r\n             <Divider />\r\n      <Tooltip title=\"視点の高さ\" placement=\"right\">\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <CameraAltIcon />\r\n        </ListItemIcon>\r\n        <Slider\r\n          defaultValue={500}\r\n          getAriaValueText={onChangeHeight}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={10}\r\n          marks\r\n          min={200}\r\n          max={2000}\r\n          onChange={onChangeVal}\r\n          style={{marginLeft:'0.8rem'}}\r\n        />\r\n      </ListItem>\r\n      </Tooltip>\r\n      <Tooltip title=\"視点の方向\" placement=\"right\">\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <FlipCameraIosIcon />\r\n        </ListItemIcon>\r\n        <Slider\r\n          defaultValue={0}\r\n          getAriaValueText={onChangeAngle}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={10}\r\n          marks\r\n          min={0}\r\n          max={360}\r\n          onChange={onChangeVal}\r\n          style={{marginLeft:'0.8rem'}}\r\n        />\r\n      </ListItem>\r\n      </Tooltip>\r\n      </div>;\r\n    }\r\n}\r\n\r\nlet isChange=false;\r\n\r\nconst onChangeVal=()=>{\r\n  isChange=true;  \r\n}\r\n\r\nconst onChangeHeight=(value)=>{\r\n    if(isChange)changeHeight(value);\r\n    isChange=false;\r\n};\r\n  \r\nconst onChangeAngle=(value)=>{\r\n  if(isChange)changeAngle(value);\r\n    isChange=false;\r\n};\r\n\r\nconst style = {\r\n    float: \"left\",\r\n    width: 230, \r\n    lineHeight: \"32px\",\r\n    borderRadius: 4,\r\n    border: \"none\",\r\n    padding: \"0 4px\",\r\n    color: \"#fff\",\r\n    background: \"#ffffff88\",\r\n    position: \"absolute\",\r\n    top: 100,\r\n    left: 5,\r\n    zindex:255\r\n};  \r\n ","import React from 'react';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n      <Dashboard />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}