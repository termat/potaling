{"version":3,"sources":["components/MapPane.js","components/listItems.js","components/SimpleDialog.js","components/FullScreenDialog.js","components/SearchResultDialog.js","components/ControlPanel.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["targetRoute","map","mapbox","workerClass","MapboxWorker","routeDistance","start","phase","animationDuration","cameraAltitude","running","angle","camera_angle","parseGeojson","str","stopMovie","json","JSON","parse","features","forEach","e","c","geometry","coordinates","type","push","propcLine","getLayer","removeLayer","getSource","removeSource","setGeojsonLayer","fitBounds","changeDuration","val","tmp","rewind","requestAnimationFrame","frame","startMovie","xmin","xmax","ymin","ymax","element","Math","min","max","viewState","width","window","innerWidth","height","innerHeight","longitude","latitude","zoom","maxZoom","pitch","MapPane","Map","accessToken","container","this","hash","style","SAT","center","minZoom","bearing","interactive","localIdeographFontFamily","deckgl","Deck","gl","painter","context","layers","initialViewState","addControl","FullscreenControl","NavigationControl","on","setTerrain","setSky","className","ref","Component","STD","PHT","updateGeojsonLayer","mapobj","addSource","data","addLayer","source","id","paint","layout","point","turf","checkView","alongRoute","camera","getFreeCameraOptions","position","MercatorCoordinate","fromLngLat","lng","lat","lookAtPoint","setFreeCameraOptions","setData","time","setTimeout","src","itemData","fileRead","url","target","alt","axios","get","then","res","stringify","MainListItems","d3","ImageList","cols","ImageListItem","ListSubheader","component","item","srcSet","process","img","loading","onClick","ImageListItemBar","title","subtitle","date","actionIcon","IconButton","sx","color","aria-label","SimpleDialog","props","onClose","selectedValue","open","Dialog","aria-labelledby","DialogTitle","frameBorder","allow","allowFullScreen","YoutubeDialog","React","useState","setOpen","Button","variant","size","value","Copyright","Typography","align","Link","href","Date","getFullYear","handleDialogOpen","useStyles","makeStyles","theme","appBar","marginLeft","spacing","flex","img_style","Transition","forwardRef","Slide","direction","FullScreenDialog","classes","isLoadwidgets","handleClose","fullScreen","TransitionComponent","AppBar","Toolbar","edge","marginRight","Box","textAlign","fontSize","margin","handleResDialogOpen","Follow","useEffect","s","document","createElement","setAttribute","body","appendChild","data-show-count","ControlPanerl","Divider","Tooltip","placement","ListItem","ListItemIcon","Slider","defaultValue","getAriaValueText","onChangeHeight","valueLabelDisplay","step","marks","onChange","onChangeVal","onChangeAngle","onChangeDuration","isChange","PI","cos","sin","float","lineHeight","borderRadius","border","padding","background","top","left","zindex","count","ResultDialog","handleListItemClick","coord","jumpTo","List","obj","button","ListItemText","primary","properties","String","sarch_str","drawerWidth","root","display","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","boxSizing","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","toolbarButtons","search","length","list","fileInput","getElementById","fileReader","FileReader","onchange","file","files","name","console","log","readAsText","onload","result","click","current_map","MAPS","changeMap","terrain","setStyle","changeStyle","Dashboard","useTheme","handleDrawerClose","CssBaseline","clsx","noWrap","Grid","orientation","flexItem","TextField","label","event","onKeyDown","key","Drawer","anchor","paper","Container","maxWidth","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d314760f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n//import mapbox from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './MapPane.css';\r\nimport {Deck} from '@deck.gl/core';\r\nimport * as turf from '@turf/turf'\r\n\r\nimport mapbox from 'mapbox-gl/dist/mapbox-gl-csp';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\r\nmapbox.workerClass = MapboxWorker;\r\n\r\nlet targetRoute;\r\nlet map;\r\nlet animationDuration = 240000;\r\nlet cameraAltitude = 500;\r\nlet routeDistance;\r\nlet start;\r\nlet running=false;\r\nlet phase;\r\nlet angle=0.0;\r\nlet camera_angle=[-0.005,-0.005];\r\n\r\nexport const jumpTo=(data)=>{\r\n    map.jumpTo({center: data});\r\n};\r\n\r\nconst propcLine=(c)=>{\r\n    c.forEach(e =>{\r\n        targetRoute.push(e);\r\n    });\r\n}\r\n\r\nexport const parseGeojson=(str)=>{\r\n    stopMovie();\r\n    let json=JSON.parse(str);\r\n    targetRoute=[];\r\n\r\n    let array=json.features;\r\n    array.forEach(e => {\r\n        let c=e.geometry.coordinates;\r\n        if(e.geometry.type===\"Point\"){\r\n            targetRoute.push(c);\r\n        }else if(e.geometry.type===\"LineString\"){\r\n            propcLine(c);\r\n        }\r\n    });\r\n    if (map.getLayer('line'))map.removeLayer('line');\r\n    if (map.getSource('trace'))map.removeSource('trace');\r\n    if (map.getLayer('point'))map.removeLayer('point');\r\n    if (map.getSource('point'))map.removeSource('point');\r\n    setGeojsonLayer(map);\r\n    fitBounds();\r\n    start=null;\r\n    phase=0.0;\r\n};\r\n\r\nexport const changeHeight=(val)=>{\r\n    cameraAltitude=val;\r\n    if(!running)checkView();\r\n};\r\n\r\nexport const changeAngle=(val)=>{\r\n    angle=(val/180.0)*Math.PI;\r\n    camera_angle=[\r\n        -0.005*Math.cos(angle)-(-0.005)*Math.sin(angle),\r\n        -0.005*Math.sin(angle)+(-0.005)*Math.cos(angle)\r\n    ];\r\n    if(!running)checkView();\r\n};\r\n\r\nexport const changeDuration=(val)=>{\r\n    let tmp=animationDuration;\r\n    animationDuration=val;\r\n    if(phase>0.0){\r\n        let tt=phase*tmp+start;\r\n        phase = (tt - start) / animationDuration;\r\n    }\r\n};\r\n\r\nexport const rewind=()=>{\r\n    start=null;\r\n    if(targetRoute)requestAnimationFrame(frame);\r\n}\r\n\r\nexport const startMovie=()=>{\r\n    running=true;\r\n    if(targetRoute)requestAnimationFrame(frame);\r\n};\r\n\r\nexport const stopMovie=()=>{\r\n    running=false;\r\n};\r\n\r\nexport const fitBounds=()=>{\r\n    if(!targetRoute)return;\r\n    let xmin=100000;\r\n    let xmax=-10000;\r\n    let ymin=100000;\r\n    let ymax=-10000;\r\n    targetRoute.forEach(element => {\r\n        xmin=Math.min(xmin,element[0]);\r\n        xmax=Math.max(xmax,element[0]);\r\n        ymin=Math.min(ymin,element[1]);\r\n        ymax=Math.max(ymax,element[1]);\r\n    });\r\n    map.fitBounds([\r\n        [xmin, ymin],\r\n        [xmax, ymax]\r\n    ]);\r\n};\r\n\r\nexport const changeStyle=(style)=>{\r\n    if(style.terrain){\r\n        delete style.terrain\r\n    }    \r\n    map.setStyle(style);\r\n    map.on('style.load', () => {\r\n        setTerrain(map);\r\n        setSky(map);\r\n        if(targetRoute)updateGeojsonLayer(map);\r\n    });\r\n};\r\n\r\nconst viewState = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    longitude: 139.692704,\r\n    latitude: 35.689526,\r\n    zoom: 14,\r\n    maxZoom: 18,\r\n    pitch: 65\r\n };\r\n\r\nexport default class MapPane extends Component {\r\n    static SAT='mapbox://styles/mapbox/satellite-v9';\r\n    static STD='/potaling/std.json';\r\n    static PHT= {\r\n            \"version\": 8,\r\n            \"sources\": {\r\n                \"t_pale\": {\r\n                    \"type\": \"raster\",\r\n                    \"tiles\": [\r\n                        \"https://cyberjapandata.gsi.go.jp/xyz/seamlessphoto/{z}/{x}/{y}.jpg\"\r\n                    ],\r\n                    \"tileSize\": 256,\r\n                    \"attribution\": \"<a href='https://maps.gsi.go.jp/development/ichiran.html'>地理院タイル（全国最新写真）</a>\"\r\n                }\r\n            },\r\n            \"layers\": [{\r\n                \"id\": \"t_pale\",\r\n                \"type\": \"raster\",\r\n                \"source\": \"t_pale\",\r\n                \"minzoom\": 0,\r\n                \"maxzoom\": 18\r\n            }]\r\n        };\r\n\r\n    componentDidMount() {\r\n        map = new mapbox.Map({\r\n            accessToken:'pk.eyJ1IjoidGVybWF0IiwiYSI6ImNqdXBmYXk1aDBwMnI0MW8xNXZ3dzVkOGUifQ.8nBCHZrBDS50yJbykEE4Sg',\r\n            container: this.container,\r\n            hash: true,\r\n            style: MapPane.SAT,\r\n            center: [139.692704, 35.689526], \r\n            zoom: 14,\r\n            maxZoom: 18,\r\n            minZoom: 8,\r\n            pitch: 65,\r\n            bearing: 0,\r\n            interactive: true,\r\n            localIdeographFontFamily: false\r\n        });\r\n\r\n        this.deckgl = new Deck({\r\n            gl: map.painter.context.gl,\r\n            layers: [],\r\n            initialViewState:viewState\r\n        });\r\n\r\n        map.addControl(new mapbox.FullscreenControl());\r\n        map.addControl(new mapbox.NavigationControl());\r\n        \r\n        map.on('load', () => {\r\n            setTerrain(map);\r\n            setSky(map);\r\n            setGeojsonLayer(map);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div className={'map'} ref={(e) => (this.container = e)} />;\r\n    }\r\n}\r\n\r\nconst updateGeojsonLayer=(mapobj)=>{\r\n    if (!mapobj.getSource('trace')){\r\n        mapobj.addSource('trace', {\r\n            type: 'geojson',\r\n            data: {\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'LineString',\r\n                'coordinates': targetRoute\r\n                }\r\n            }\r\n        });\r\n    }\r\n    if (!mapobj.getLayer('line')){\r\n        mapobj.addLayer({\r\n            type: 'line',\r\n            source: 'trace',\r\n            id: 'line',\r\n            paint: {\r\n                'line-color': 'orange',\r\n                'line-width': 5\r\n            },\r\n            layout: {\r\n                'line-cap': 'round',\r\n                'line-join': 'round'\r\n            }\r\n        });\r\n    }\r\n    if (!mapobj.getSource('point')){\r\n        let point = {\r\n            'type': 'FeatureCollection',\r\n            'features': [{\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': targetRoute[0]\r\n                }\r\n            }]\r\n        };\r\n        mapobj.addSource('point', {\r\n            'type': 'geojson',\r\n            'data': point \r\n        });\r\n    }\r\n    if (!mapobj.getLayer('point')){\r\n        mapobj.addLayer({\r\n            'id': 'point',\r\n            'source': 'point',\r\n            'type': 'circle',\r\n            'paint': {\r\n                'circle-color': \"#ff0000\",\r\n                'circle-radius':8,\r\n                'circle-stroke-width': 4,\r\n                'circle-stroke-opacity': 0.05\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nconst setGeojsonLayer=(mapobj)=>{\r\n    if(targetRoute){\r\n        mapobj.addSource('trace', {\r\n            type: 'geojson',\r\n            data: {\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'LineString',\r\n                'coordinates': targetRoute\r\n                }\r\n            }\r\n        });\r\n        mapobj.addLayer({\r\n            type: 'line',\r\n            source: 'trace',\r\n            id: 'line',\r\n            paint: {\r\n                'line-color': 'orange',\r\n                'line-width': 5\r\n            },\r\n            layout: {\r\n                'line-cap': 'round',\r\n                'line-join': 'round'\r\n            }\r\n        });\r\n        let point = {\r\n            'type': 'FeatureCollection',\r\n            'features': [{\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': targetRoute[0]\r\n                }\r\n            }]\r\n        };\r\n        mapobj.addSource('point', {\r\n            'type': 'geojson',\r\n            'data': point \r\n        });\r\n        mapobj.addLayer({\r\n            'id': 'point',\r\n            'source': 'point',\r\n            'type': 'circle',\r\n            'paint': {\r\n                'circle-color': \"#ff0000\",\r\n                'circle-radius':8,\r\n                'circle-stroke-width': 4,\r\n                'circle-stroke-opacity': 0.05\r\n            },\r\n        });\r\n        routeDistance = turf.length(turf.lineString(targetRoute));\r\n    }\r\n};\r\n\r\nconst setTerrain=(mapobj)=>{\r\n    if (!mapobj.getSource('mapbox-dem')){\r\n        mapobj.addSource('mapbox-dem', {\r\n            'type': 'raster-dem',\r\n            'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\r\n            'tileSize': 512,\r\n            'maxzoom': 14\r\n        });\r\n        mapobj.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\r\n/*\r\n        mapobj.addSource('gsi-dem', {\r\n            \"type\": \"raster-dem\",\r\n            \"encoding\": \"gsi\",\r\n            \"tiles\": [\r\n                \"https://cyberjapandata.gsi.go.jp/xyz/dem_png/{z}/{x}/{y}.png\"\r\n            ],\r\n            \"tileSize\": 256,\r\n            \"maxzoom\": 14,\r\n            \"attribution\": '<a href=\"https://maps.gsi.go.jp/development/ichiran.html#dem\" target=\"_blank\">地理院標高タイル</a>'\r\n        });\r\n*/\r\n\r\n    }\r\n};\r\n\r\nconst setSky=(mapobj)=>{\r\n    if (!mapobj.getLayer('sky')){\r\n        mapobj.addLayer({\r\n            'id': 'sky',\r\n            'type': 'sky',\r\n            'paint': {\r\n            'sky-type': 'atmosphere',\r\n            'sky-atmosphere-sun': [0.0, 0.0],\r\n            'sky-atmosphere-sun-intensity': 15\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst checkView=()=>{\r\n    if(!targetRoute)return;\r\n    if(!phase)phase=0;\r\n    let alongRoute = turf.along(\r\n        turf.lineString(targetRoute),\r\n        routeDistance * phase\r\n    ).geometry.coordinates;\r\n    let camera = map.getFreeCameraOptions();\r\n    camera.position = mapbox.MercatorCoordinate.fromLngLat({\r\n        lng: alongRoute[0]+camera_angle[0],\r\n        lat: alongRoute[1]+camera_angle[1]\r\n        },\r\n        cameraAltitude\r\n    ); \r\n    camera.lookAtPoint({\r\n        lng: alongRoute[0],\r\n        lat: alongRoute[1]\r\n    });\r\n    map.setFreeCameraOptions(camera);\r\n    let point = {\r\n        'type': 'FeatureCollection',\r\n        'features': [{\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'Point',\r\n                'coordinates': alongRoute\r\n            }\r\n        }]\r\n    };\r\n    map.getSource('point').setData(point);\r\n};\r\n\r\nconst frame=(time)=>{\r\n    if (!start) start = time;\r\n    phase = (time - start) / animationDuration;\r\n    if (phase > 1) {\r\n        setTimeout(function () {\r\n            start=0.0;\r\n            running=false;\r\n        }, 1500);\r\n    }\r\n    let alongRoute = turf.along(\r\n        turf.lineString(targetRoute),\r\n        routeDistance * phase\r\n    ).geometry.coordinates;\r\n    let camera = map.getFreeCameraOptions();\r\n    camera.position = mapbox.MercatorCoordinate.fromLngLat({\r\n        lng: alongRoute[0]-camera_angle[0],\r\n        lat: alongRoute[1]-camera_angle[1]\r\n        },\r\n        cameraAltitude\r\n    ); \r\n    camera.lookAtPoint({\r\n        lng: alongRoute[0],\r\n        lat: alongRoute[1]\r\n    });\r\n    map.setFreeCameraOptions(camera);\r\n    let point = {\r\n        'type': 'FeatureCollection',\r\n        'features': [{\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'Point',\r\n                'coordinates': alongRoute\r\n            }\r\n        }]\r\n    };\r\n    let src=map.getSource('point');\r\n    if(src)src.setData(point);\r\n    if(running)requestAnimationFrame(frame);\r\n};\r\n","import React, {Component} from 'react';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {parseGeojson} from './MapPane'\nimport axios from 'axios';\nimport * as d3 from 'd3';\n\nconst itemData = [];\n\nconst fileRead=(data)=>{\n//  let url=\"https://termat.github.io/potaling/geojson/\"+data.target.alt;\n  let url=\"/potaling/geojson/\"+data.target.alt;\n  axios.get(url)\n  .then(res => {\n    const val = res.data;\n    let str=JSON.stringify(val);\n    parseGeojson(str)\n  });\n};\n\nexport default class MainListItems extends Component{\n  componentDidMount() {\n    let url=\"/potaling/pota_data.csv\";\n    d3.csv(url, function(data) {\n      itemData.push(data);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n      <ImageList cols={1}>\n        <ImageListItem key=\"Subheader\">\n          <ListSubheader component=\"div\">ポタリングデータ</ListSubheader>\n        </ImageListItem>\n        {itemData.map((item) => (\n          <ImageListItem key={item.img}>\n            <img\n              srcSet={`${process.env.PUBLIC_URL}/images/${item.img}`}\n              alt={item.json}\n              loading=\"lazy\"\n              onClick={fileRead}\n            />\n            <ImageListItemBar\n              title={item.title}\n              subtitle={item.date}\n              actionIcon={\n                <IconButton\n                  sx={{ color: 'rgba(255, 255, 255, 0.54)' }}\n                  aria-label={`info about ${item.title}`}\n                >\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </ImageListItem>\n        ))}\n      </ImageList>\n    </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">アプリの使い方</DialogTitle>\r\n      <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/qSJzxQrFlvE\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n     </Dialog>\r\n  );\r\n}\r\n\r\nexport default function YoutubeDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n      <div>\r\n      <Button variant=\"contained\" size=\"large\" onClick={handleClickOpen}>　使い方　</Button>\r\n      <SimpleDialog open={open} onClose={handleClose} />\r\n      </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport YotubeDialog from './SimpleDialog'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        t.matsuoka\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst img_style = {\r\n  width: \"100%\" \r\n}; \r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport let handleDialogOpen;\r\n\r\nexport default function FullScreenDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  handleDialogOpen = () => {\r\n    isLoadwidgets=false;\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <DirectionsBikeIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title} onClick={handleClose}>\r\n              ポタリングの記録\r\n            </Typography>\r\n            <div style={{marginRight:\"10px\"}} ><Follow /></div>\r\n            <div style={{marginRight:\"30px\"}}><a href=\"https://twitter.com/share\" className=\"twitter-share-button\" style={{marginRight:\"20px\"}}>Tweet</a></div>\r\n            <CloseIcon onClick={handleClose} />\r\n            <Button color=\"inherit\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n          <img src={`${process.env.PUBLIC_URL}/images/back.jpg`} style={img_style} alt={'top'} />\r\n          <Box textAlign=\"center\">\r\n          <h1>ポタリングした地域を3D地図で俯瞰する実験サイトです。</h1>\r\n          <p style={{fontSize: \"20px\"}}>ポタリング（自転車散歩）した地域を俯瞰してみたいと思い作成したWebアプリです。<br />\r\n            データ（geojson）を読み込むと、3D地図上で経路の俯瞰画像が表示されます。<br />\r\n            実際に走った経路を俯瞰してみると小さな発見があって結構面白いです。</p>\r\n          <Button variant=\"contained\" style={{margin:\"10px\"}} size=\"large\" onClick={handleClose}>　開　始　</Button>\r\n          <YotubeDialog />\r\n          </Box>\r\n        </div>\r\n        <br />\r\n        <Copyright />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nlet isLoadwidgets = false;\r\nconst Follow = () => {\r\n  React.useEffect(() => {\r\n    if (!isLoadwidgets) {\r\n      const s = document.createElement(\"script\");\r\n      s.setAttribute(\"src\", \"https://platform.twitter.com/widgets.js\");\r\n      document.body.appendChild(s);\r\n      isLoadwidgets = true;\r\n    }\r\n  }, []);\r\n  return (\r\n    <a href=\"https://twitter.com/t_mat?ref_src=twsrc%5Etfw\" className=\"twitter-follow-button\" data-show-count=\"false\">Follow @t_mat</a>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {jumpTo} from './MapPane';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nlet data=[];\r\nlet handleResDialogOpen;\r\nlet count=0;\r\n\r\nexport const showResultList=(list)=>{\r\n    data=list;\r\n    handleResDialogOpen();\r\n};\r\n\r\nexport default function ResultDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  handleResDialogOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleResDialogClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    const coord=value.geometry.coordinates;\r\n    jumpTo(coord);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleResDialogClose}>閉じる</Button>\r\n    　</DialogTitle>\r\n      <List>\r\n        {data.map((obj) => (\r\n          <ListItem button onClick={() => handleListItemClick(obj)} key={obj.properties.title+String(count++)}>\r\n            <ListItemText primary={obj.properties.title} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport FlipCameraIosIcon from '@material-ui/icons/FlipCameraIos';\r\nimport SwitchCameraIcon from '@material-ui/icons/SwitchCamera';\r\nimport {changeHeight,changeDuration,changeAngle} from './MapPane'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nexport default class ControlPanerl extends Component {\r\n\r\n    render() {\r\n        return <div style={style}>\r\n             <Divider />\r\n      <Tooltip title=\"視点の高さ\" placement=\"right\">\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <CameraAltIcon />\r\n        </ListItemIcon>\r\n        <Slider\r\n          defaultValue={500}\r\n          getAriaValueText={onChangeHeight}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={10}\r\n          marks\r\n          min={200}\r\n          max={2000}\r\n          onChange={onChangeVal}\r\n          style={{marginLeft:'0.8rem'}}\r\n        />\r\n      </ListItem>\r\n      </Tooltip>\r\n      <Tooltip title=\"視点の方向\" placement=\"right\">\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <FlipCameraIosIcon onClick={changeDuration} />\r\n        </ListItemIcon>\r\n        <Slider\r\n          defaultValue={0}\r\n          getAriaValueText={onChangeAngle}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={10}\r\n          marks\r\n          min={0}\r\n          max={360}\r\n          onChange={onChangeVal}\r\n          style={{marginLeft:'0.8rem'}}\r\n        />\r\n      </ListItem>\r\n      </Tooltip>\r\n      <Tooltip title=\"移動時間\" placement=\"right\">\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <SwitchCameraIcon />\r\n        </ListItemIcon>\r\n        <Slider\r\n          defaultValue={300}\r\n          getAriaValueText={onChangeDuration}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={20}\r\n          marks\r\n          min={80}\r\n          max={360}\r\n          onChange={onChangeVal}\r\n          style={{marginLeft:'0.8rem'}}\r\n        />\r\n      </ListItem>\r\n      </Tooltip>\r\n        </div>;\r\n    }\r\n}\r\n\r\nlet isChange=false;\r\n\r\nconst onChangeVal=()=>{\r\n  isChange=true;  \r\n}\r\n\r\nconst onChangeHeight=(value)=>{\r\n    if(isChange)changeHeight(value);\r\n    isChange=false;\r\n};\r\n  \r\nconst onChangeAngle=(value)=>{\r\n  if(isChange)changeAngle(value);\r\n    isChange=false;\r\n};\r\n  \r\nconst onChangeDuration=(value)=>{\r\n  if(isChange)changeDuration(value*1000);\r\n    isChange=false;\r\n};\r\n\r\nconst style = {\r\n    float: \"left\",\r\n    width: 230, \r\n    lineHeight: \"32px\",\r\n    borderRadius: 4,\r\n    border: \"none\",\r\n    padding: \"0 4px\",\r\n    color: \"#fff\",\r\n    background: \"#ffffff88\",\r\n    position: \"absolute\",\r\n    top: 100,\r\n    left: 5,\r\n    zindex:255\r\n};  \r\n ","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MainListItems from './listItems';\nimport MapPane from './MapPane';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MapIcon from '@material-ui/icons/Map';\nimport AllOutIcon from '@material-ui/icons/AllOut';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport {rewind,startMovie,stopMovie,fitBounds,parseGeojson,changeStyle} from './MapPane'\nimport FullScreenDialog from './FullScreenDialog'\nimport {handleDialogOpen} from './FullScreenDialog'\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Grid from '@material-ui/core/Grid';\nimport ControlPanerl from './ControlPanel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport ResultDialog,{showResultList} from './SearchResultDialog'\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    height:'65px',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    boxSizing: 'border-box',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  toolbarButtons: {\n    marginLeft: 'auto',\n  },\n}));\n\nlet sarch_str;\n\nconst setSearchValue=(str)=>{\n  sarch_str=str;\n}\n\nconst search=()=>{\n  if(!sarch_str)return;\n  if(sarch_str.length<1)return;\n  let url=\"https://msearch.gsi.go.jp/address-search/AddressSearch?q=\"+sarch_str;\n  axios.get(url)\n  .then(res => {\n    showResultList(res.data);\n  });\n};\n\nconst fileRead=()=>{\n  let fileInput = document.getElementById('file');\n  let fileReader = new FileReader();\n  fileInput.onchange = () => {\n      let file = fileInput.files[0];\n      if(!file||!file.name)return;\n      console.log(file.name);\n      console.log(file.size);\n      console.log(file.type);\n      fileReader.readAsText(file);\n  };\n  fileReader.onload = () => parseGeojson(fileReader.result);\n  fileInput.click();\n};\n\nlet current_map=0;\nlet MAPS=[MapPane.SAT,MapPane.PHT,MapPane.STD]\n\nconst changeMap=()=>{\n  current_map=(current_map+1)%3;\n  changeStyle(MAPS[current_map]);\n}\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            ポタリングの記録\n          </Typography>\n          <div className={classes.toolbarButtons}>\n          <Grid container alignItems=\"center\" className={classes.root}>\n          <Divider orientation=\"vertical\" flexItem />\n          <Tooltip title=\"検索\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={search} >\n              <SearchIcon />\n            </IconButton>\n            </Tooltip>\n            <TextField id=\"input-search\" label=\"検索\" size=\"small\" \n                style={{background:'white'}} \n                onChange={(event) => setSearchValue(event.target.value)}\n                onKeyDown={(e) => {\n                  if (e.key === \"Enter\") {\n                    search();\n                  }\n               }} \n            />\n          <Divider orientation=\"vertical\" flexItem />\n          <Tooltip title=\"Geojson読込\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={fileRead}>\n              <FolderOpenIcon />\n            </IconButton>\n            </Tooltip>\n            <input type=\"file\" id=\"file\" style={{ display: 'none'}}></input>\n            <Tooltip title=\"地図切替\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={changeMap}>\n              <MapIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"領域移動\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={fitBounds}>\n              <AllOutIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"トップページ\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={handleDialogOpen}>\n              <NotificationsIcon />\n            </IconButton>\n            </Tooltip>\n            <Divider orientation=\"vertical\" flexItem />\n            <Tooltip title=\"開始\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={startMovie}>\n              <PlayCircleFilledIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"停止\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={stopMovie}>\n              <PauseCircleFilledIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"戻る\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={rewind}>\n              <SkipPreviousIcon />\n            </IconButton>\n            </Tooltip>\n            <Divider orientation=\"vertical\" flexItem />\n            </Grid>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List><MainListItems /></List>\n        <Divider />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Container maxWidth=\"xl\" className={classes.container} onClick={handleDrawerClose} >\n          <MapPane />\n          <ControlPanerl /> \n        </Container>\n      </main>\n      <FullScreenDialog />\n      <ResultDialog />\n    </div>\n  );\n}\n","import React from 'react';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n      <Dashboard />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}