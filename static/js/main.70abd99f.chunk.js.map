{"version":3,"sources":["components/ControlBar.js","components/MapPane.js","components/listItems.js","components/SimpleDialog.js","components/FullScreenDialog.js","components/RegistDialog.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["setSlider","endRunning","setRunning","speedChange","targetRoute","map","spId","ControlBar","props","state","play_state","val","label","value","setState","Math","ceil","stopMovie","startMovie","setSpeed","style","bar_style","ListItem","Button","variant","color","marginRight","onClick","this","Slider","getAriaValueText","onChangeProgress","aria-labelledby","valueLabelDisplay","step","marks","min","max","onChange","onChangeVal","marginLeft","Component","ieRunning","setPhase","target","float","width","lineHeight","borderRadius","border","padding","background","position","bottom","left","zindex","mapbox","workerClass","MapboxWorker","routeDistance","speed","start","phase","pointer","runAni","cameraAltitude","running","angle","camera_angle","speedMul","angleVal","dem","vector","parseGeojson","str","json","JSON","parse","features","forEach","e","c","geometry","coordinates","type","push","propcLine","getLayer","removeLayer","getSource","removeSource","setGeojsonLayer","fitBounds","frame","requestAnimationFrame","cancelAnimationFrame","xmin","xmax","ymin","ymax","element","viewState","window","innerWidth","height","innerHeight","longitude","latitude","zoom","maxZoom","pitch","MapPane","Map","accessToken","container","hash","PHT","center","minZoom","bearing","interactive","localIdeographFontFamily","deckgl","Deck","gl","painter","context","layers","initialViewState","addControl","FullscreenControl","NavigationControl","on","setTerrain","setSky","setVector","point","move","preventDefault","console","log","originalEvent","deltaY","className","ref","STD","x0","x","y0","y","x1","y1","e2","flg","touches","length","PI","cos","sin","updateGeojsonLayer","mapobj","addSource","data","addLayer","source","id","paint","layout","turf","time","dd","Date","now","setTimeout","alongRoute","camera","getFreeCameraOptions","MercatorCoordinate","fromLngLat","lng","lat","lookAtPoint","setFreeCameraOptions","src","setData","itemData","fileRead","url","getItem","alt","location","search","axios","get","then","res","stringify","i","no","MainListItems","pageNo","page","d3","startData","ImageList","cols","ImageListItem","ListSubheader","component","item","srcSet","process","img","loading","ImageListItemBar","title","subtitle","date","actionIcon","IconButton","sx","aria-label","SimpleDialog","onClose","selectedValue","open","Dialog","DialogTitle","frameBorder","allow","allowFullScreen","YoutubeDialog","React","useState","setOpen","size","Copyright","Typography","align","Link","href","getFullYear","handleDialogOpen","handleDialogClose","useStyles","makeStyles","theme","appBar","spacing","flex","img_style","Transition","forwardRef","Slide","direction","FullScreenDialog","classes","isLoadwidgets","setup","fullScreen","TransitionComponent","AppBar","Toolbar","edge","Box","display","xs","md","textAlign","fontSize","margin","fname","Follow","useEffect","s","document","createElement","setAttribute","body","appendChild","data-show-count","gpxParser","require","dialog","toolbar","backgroundColor","box","textField","fontfamily","image","button","RegistDialog","startDate","setStartDate","photo_src","setPhotoSrc","route_src","setJson","handleClose","fileProc","obj","endsWith","gpx","toGeoJSON","post","headers","accept","withCredentials","AccessControlAllowOrigin","AccessControlAllowMethods","preflightContinue","catch","error","TextField","placeholder","autoComplete","fileInput","getElementById","fileReader","FileReader","onchange","file","files","name","toLowerCase","readAsText","onload","result","click","startIcon","selected","readAsDataURL","colSpan","tcxParse","DOMParser","drawerWidth","root","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","boxSizing","drawerHeader","alignItems","mixins","justifyContent","content","flexGrow","contentShift","toolbarButtons","doc","parseFromString","tcx","current_map","MAPS","changeMap","terrain","setStyle","Dashboard","useTheme","handleDrawerOpen","handleDrawerClose","CssBaseline","clsx","noWrap","Grid","Divider","orientation","flexItem","Tooltip","placement","Drawer","anchor","paper","List","Container","maxWidth","Child","useLocation","arg","getArg","Object","pair","substring","split","kv","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yNAMWA,EACAC,EACPC,EAGAC,ECCAC,EACAC,E,6YDHAC,EAAK,EAGYC,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXC,WAAY,eACZC,IAAI,EACJC,MAAM,gBALO,E,qDASnB,WAAoB,IAAD,OACfZ,EAAU,SAACa,GACP,EAAKC,SAAS,CAACH,IAAII,KAAKC,KAAW,IAANH,MAEjCZ,EAAW,WACPgB,KACA,EAAKH,SAAS,CAACJ,WAAY,kBAE/BR,EAAW,WACoB,iBAAxB,EAAKO,MAAMC,YACVQ,KACA,EAAKJ,SAAS,CAACJ,WAAY,mBAE3BO,KACA,EAAKH,SAAS,CAACJ,WAAY,mBAGnCP,EAAY,WAEE,KADVG,GAAMA,EAAK,GAAG,IAEVa,GAAS,GACT,EAAKL,SAAS,CAACF,MAAM,kBACT,IAAPN,GACLa,GAAS,GACT,EAAKL,SAAS,CAACF,MAAM,mBAErBO,GAAS,GACT,EAAKL,SAAS,CAACF,MAAM,qB,oBAKjC,WACI,OAAO,qBAAKQ,MAAOC,GAAZ,SACP,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUL,MAAO,CAACM,YAAY,QAASC,QAASzB,EAAlF,SAA+F0B,KAAKnB,MAAMC,aAC1G,cAACmB,EAAA,EAAD,CACEhB,MAAOe,KAAKnB,MAAME,IAClBmB,iBAAkBC,GAClBC,kBAAgB,kBAChBC,kBAAkB,OAClBC,KAAM,EACNC,OAAK,EACLC,IAAK,EACLC,IAAK,IACLC,SAAUC,KAEZ,cAAChB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUL,MAAO,CAACoB,WAAW,QAASb,QAASxB,EAAjF,SAA+FyB,KAAKnB,MAAMG,iB,GA1D1E6B,aAgElCV,GAAiB,SAAClB,KAIlB0B,GAAY,SAAC5B,GACX+B,MAAYC,GAAShC,EAAIiC,OAAO/B,MAAM,MAGxCQ,GAAY,CACdwB,MAAO,OACPC,MAAO,MACPC,WAAY,OACZC,aAAc,EACdC,OAAQ,OACRC,QAAS,oBACTzB,MAAO,OACP0B,WAAY,YACZC,SAAU,WACVC,OAAQ,GACRC,KAAM,KACNC,OAAO,K,+BCvFXC,KAAOC,YAAcC,KAIrB,IACIC,GACAC,GACAC,GAEAC,GAIAC,GAEAC,GAXAC,GAAiB,IAIjBC,IAAQ,EAERC,GAAM,EACNC,GAAa,EAAE,MAAO,MACtBC,GAAS,EAETC,GAAS,EAIPC,GAAI,CACN,KAAQ,aACR,MAAS,CAEP,0CAEF,SAAY,IACZ,QAAW,GACX,YAAe,sGAYXC,GAAO,CACX,KAAQ,SACR,OAAU,6DACV,MAAS,CACL,2EAEJ,QAAU,EACV,QAAW,IAGFrD,GAAS,SAACR,GACnB0D,GAAS1D,GAGA+B,GAAU,WACnB,OAAOwB,IAaEO,GAAa,SAACC,GACvBzD,KACA,IAAI0D,EAAKC,KAAKC,MAAMH,GACpBtE,EAAY,GAEFuE,EAAKG,SACTC,SAAQ,SAAAC,GACV,IAAIC,EAAED,EAAEE,SAASC,YACI,UAAlBH,EAAEE,SAASE,KACVhF,EAAYiF,KAAKJ,GACM,eAAlBD,EAAEE,SAASE,MAhBZ,SAACH,GACbA,EAAEF,SAAQ,SAAAC,GACN5E,EAAYiF,KAAKL,MAebM,CAAUL,MAGd5E,EAAIkF,SAAS,SAAQlF,EAAImF,YAAY,QACrCnF,EAAIoF,UAAU,UAASpF,EAAIqF,aAAa,SACxCrF,EAAIkF,SAAS,UAASlF,EAAImF,YAAY,SACtCnF,EAAIoF,UAAU,UAASpF,EAAIqF,aAAa,SAC5CC,GAAgBtF,GAChBuF,KACA/B,GAAM,KACNC,GAAM,GAGGnB,GAAS,SAAChC,GAER,KADXmD,GAAMnD,KACSkD,GAAM,MAClBzD,GAAYyF,MAGN3E,GAAW,WACpBgD,IAAQ,EACL9D,GAAY0F,sBAAsBD,KAG5B5E,GAAU,WACnBiD,IAAQ,EACR6B,qBAAqB/B,IACrBH,GAAM,MAGG+B,GAAU,WACnB,GAAIxF,EAAJ,CACA,IAAI4F,EAAK,IACLC,GAAM,IACNC,EAAK,IACLC,GAAM,IACV/F,EAAY2E,SAAQ,SAAAqB,GAChBJ,EAAKjF,KAAKqB,IAAI4D,EAAKI,EAAQ,IAC3BH,EAAKlF,KAAKsB,IAAI4D,EAAKG,EAAQ,IAC3BF,EAAKnF,KAAKqB,IAAI8D,EAAKE,EAAQ,IAC3BD,EAAKpF,KAAKsB,IAAI8D,EAAKC,EAAQ,OAE/B/F,EAAIuF,UAAU,CACV,CAACI,EAAME,GACP,CAACD,EAAME,OAiBTE,GAAY,CACdvD,MAAOwD,OAAOC,WACdC,OAAQF,OAAOG,YACfC,UAAW,WACXC,SAAU,UACVC,KAAM,GACNC,QAAS,GACTC,MAAO,IAGUC,G,uKAyBjB,WACI1G,EAAM,IAAImD,KAAOwD,IAAI,CACjBC,YAAY,2FACZC,UAAWtF,KAAKsF,UAChBC,MAAM,EACN/F,MAAO2F,EAAQK,IACfC,OAAQ,CAAC,WAAY,WACrBT,KAAM,GACNC,QAAS,GACTS,QAAS,EACTR,MAAO,GACPS,QAAS,EACTC,aAAa,EACbC,0BAA0B,IAI9B7F,KAAK8F,OAAS,IAAIC,IAAK,CACnBC,GAAIvH,EAAIwH,QAAQC,QAAQF,GACxBG,OAAQ,GACRC,iBAAiB3B,KAGrBhG,EAAI4H,WAAW,IAAIzE,KAAO0E,mBAC1B7H,EAAI4H,WAAW,IAAIzE,KAAO2E,mBAE1B9H,EAAI+H,GAAG,QAAQ,WACXC,GAAWhI,GACXiI,GAAOjI,GAEPsF,GAAgBtF,GAChBkI,GAAUlI,MAGdA,EAAI+H,GAAG,cAAc,SAACpD,GAClBjB,GAAQiB,EAAEwD,SAEdnI,EAAI+H,GAAG,YAAY,SAACpD,GAChBjB,GAAQ,QAGZ1D,EAAI+H,GAAG,aAAa,SAACpD,GACjBjB,GAAQiB,EAAEwD,SAEdnI,EAAI+H,GAAG,WAAW,SAACpD,GACfjB,GAAQ,QAEZ1D,EAAI+H,GAAG,YAAY,SAACpD,GAChBjB,GAAQ,QAEZ1D,EAAI+H,GAAG,aAAa,SAACpD,GACjByD,GAAKzD,MAET3E,EAAI+H,GAAG,aAAa,SAACpD,GACjByD,GAAKzD,MAET3E,EAAI+H,GAAG,SAAQ,SAACpD,GACTd,KACCc,EAAE0D,iBACFC,QAAQC,IAAI5D,EAAE6D,cAAcC,OAAO,GAE/B7E,GADDe,EAAE6D,cAAcC,OAAO,EACP/H,KAAKqB,IAAI,IAAK6B,GAAe,IAE7BlD,KAAKsB,IAAI,IAAI4B,GAAe,U,oBAM3D,WAAU,IAAD,OACL,OAAO,qBAAK8E,UAAW,MAAOC,IAAK,SAAChE,GAAD,OAAQ,EAAKkC,UAAYlC,S,GA/F/BvC,aAAhBsE,GAEVkC,IAAI,qBAFMlC,GAGVK,IAAK,CACJ,QAAW,EACX,OAAU,6DACV,QAAW,CACP,OAAU,CACN,KAAQ,SACR,MAAS,CACL,sEAEJ,SAAY,IACZ,YAAe,uJAGvB,OAAU,CAAC,CACP,GAAM,SACN,KAAQ,SACR,OAAU,SACV,QAAW,EACX,QAAW,MA8E3B,IAAMqB,GAAK,SAACzD,GACR,GAAGd,IAASH,GAAQ,CAChBiB,EAAE0D,iBACF,IAAIQ,EAAGnF,GAAQoF,EACXC,EAAGrF,GAAQsF,EACXC,EAAGtE,EAAEwD,MAAMW,EACXI,EAAGvE,EAAEwD,MAAMa,EACTG,EAAKxE,EAAE6D,cACTY,GAAI,EACJD,GAAM,YAAaA,GACfA,EAAGE,QAAQC,OAAS,IACpBF,GAAI,GAGRA,EAEIxF,GADDsF,EAAGH,EACarI,KAAKqB,IAAI,IAAK6B,GAAe,IAE7BlD,KAAKsB,IAAI,IAAI4B,GAAe,IAG5CqF,EAAGJ,GAEF/E,IADAG,IAAUA,GAAS,GAAG,KACN,IAAOvD,KAAK6I,GAC5BxF,GAAa,EACR,KAAMrD,KAAK8I,IAAI1F,MAAS,KAAOpD,KAAK+I,IAAI3F,KACxC,KAAMpD,KAAK+I,IAAI3F,KAAS,KAAOpD,KAAK8I,IAAI1F,OAI7CA,IADAG,IAAUA,GAAS,GAAG,KACN,IAAOvD,KAAK6I,GAC5BxF,GAAa,EACR,KAAMrD,KAAK8I,IAAI1F,MAAS,KAAOpD,KAAK+I,IAAI3F,KACxC,KAAMpD,KAAK+I,IAAI3F,KAAS,KAAOpD,KAAK8I,IAAI1F,MAIlDJ,KAAQA,GAAQiB,EAAEwD,SAIvBuB,GAAmB,SAACC,GA6BtB,GA5BKA,EAAOvE,UAAU,UAClBuE,EAAOC,UAAU,QAAS,CACtB7E,KAAM,UACN8E,KAAM,CACN,KAAQ,UACR,WAAc,GACd,SAAY,CACR,KAAQ,aACR,YAAe9J,MAKtB4J,EAAOzE,SAAS,SACjByE,EAAOG,SAAS,CACZ/E,KAAM,OACNgF,OAAQ,QACRC,GAAI,OACJC,MAAO,CACH,aAAc,SACd,aAAc,GAElBC,OAAQ,CACJ,WAAY,QACZ,YAAa,YAIpBP,EAAOvE,UAAU,SAAS,CAC3B,IAAI+C,EAAQ,CACR,KAAQ,oBACR,SAAY,CAAC,CACT,KAAQ,UACR,WAAc,GACd,SAAY,CACR,KAAQ,QACR,YAAepI,EAAY,OAIvC4J,EAAOC,UAAU,QAAS,CACtB,KAAQ,UACR,KAAQzB,IAGXwB,EAAOzE,SAAS,UACjByE,EAAOG,SAAS,CACZ,GAAM,QACN,OAAU,QACV,KAAQ,SACR,MAAS,CACL,eAAgB,UAChB,gBAAgB,EAChB,sBAAuB,EACvB,wBAAyB,QAMnCxE,GAAgB,SAACqE,GACnB,GAAG5J,EAAY,CACX4J,EAAOC,UAAU,QAAS,CACtB7E,KAAM,UACN8E,KAAM,CACN,KAAQ,UACR,WAAc,GACd,SAAY,CACR,KAAQ,aACR,YAAe9J,MAIvB4J,EAAOG,SAAS,CACZ/E,KAAM,OACNgF,OAAQ,QACRC,GAAI,OACJC,MAAO,CACH,aAAc,SACd,aAAc,GAElBC,OAAQ,CACJ,WAAY,QACZ,YAAa,WAGrB,IAAI/B,EAAQ,CACR,KAAQ,oBACR,SAAY,CAAC,CACT,KAAQ,UACR,WAAc,GACd,SAAY,CACR,KAAQ,QACR,YAAepI,EAAY,OAIvC4J,EAAOC,UAAU,QAAS,CACtB,KAAQ,UACR,KAAQzB,IAEZwB,EAAOG,SAAS,CACZ,GAAM,QACN,OAAU,QACV,KAAQ,SACR,MAAS,CACL,eAAgB,UAChB,gBAAgB,EAChB,sBAAuB,EACvB,wBAAyB,OAGjCxG,GAAgB6G,SAAYA,aAAgBpK,IAC5CwD,GAAM,GAAID,GAAc,GAAI,OAI9B0E,GAAW,SAAC2B,GACTA,EAAOvE,UAAU,gBAClBuE,EAAOC,UAAU,aAAc1F,IAC/ByF,EAAO3B,WAAW,CAAE,OAAU,aAAc,aAAgB,SAiC9DE,GAAU,SAACyB,GACoB,IAAD,EAA3BA,EAAOvE,UAAU,YAClBuE,EAAOC,UAAU,SAAUzF,IAC3BwF,EAAOG,SAAS,CACZ,GAAM,SACN,KAAQ,OACR,OAAU,SACV,eAAgB,OAChB,QAAW,EACX,QAAW,GACX,MAAS,CACD,eAAgB,EAChB,aAAc,kBACd,aAAc,KAG1BH,EAAOG,SAAS,CACZ,GAAM,QACN,KAAQ,SACR,OAAU,SACV,eAAgB,QAChB,QAAW,EACX,QAAW,GACX,WACI,YAAa,GACb,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,aAAa,KAAK,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,cAAc,IACzI,aAAa,CAAC,MAAM,OACpB,YAAY,CAAC,yBACb,sBAAsB,EACtB,qBAAoB,GANxB,oCAOyB,GAPzB,cAQI,iBAAiB,QARrB,cASI,iBAAiB,IATrB,cAUI,uBAAwB,CAAC,MAAO,SAAU,OAAQ,UAVtD,cAWI,eAAgB,QAXpB,cAYI,mBAAoB,SAZxB,GAcA,MAAS,CACL,aAAc,QACd,eAAgB,EAChB,kBAAmB,yBACnB,kBAAmB,IACnB,iBAAkB,OAM5B7B,GAAO,SAAC0B,GACLA,EAAOzE,SAAS,QACjByE,EAAOG,SAAS,CACZ,GAAM,MACN,KAAQ,MACR,MAAS,CACT,WAAY,aACZ,qBAAsB,CAAC,EAAK,GAC5B,+BAAgC,OAoEtCtE,GAAM,SAANA,EAAO4E,GACT,GAAK5G,GAID,GAAoB,qBAAT4G,EAAsB,CAC7B,IAAIC,EAAGD,EAAK5G,GACZA,GAAM4G,EACN3G,IAAYF,GAAM8G,EAAGrG,GAAS,QAE9BR,GAAM8G,KAAKC,WARf/G,GAAQ4G,EAWZzK,EAAU8D,IACNA,IAAS,GACT+G,YAAW,WACP3G,IAAQ,EACRjE,MACD,MAEP,IAAI6K,EAAaN,QACbA,aAAgBpK,GAChBuD,GAAgBG,IAClBoB,SAASC,YACP4F,EAAS1K,EAAI2K,uBACjBD,EAAO3H,SAAWI,KAAOyH,mBAAmBC,WAAW,CAC/CC,IAAKL,EAAW,GAAG1G,GAAa,GAChCgH,IAAKN,EAAW,GAAG1G,GAAa,IAEpCH,IAEJ8G,EAAOM,YAAY,CACfF,IAAKL,EAAW,GAChBM,IAAKN,EAAW,KAEpBzK,EAAIiL,qBAAqBP,GACzB,IAAIvC,EAAQ,CACR,KAAQ,oBACR,SAAY,CAAC,CACT,KAAQ,UACR,WAAc,GACd,SAAY,CACR,KAAQ,QACR,YAAesC,MAIvBS,EAAIlL,EAAIoF,UAAU,SACnB8F,GAAIA,EAAIC,QAAQhD,GAChBtE,GACCF,GAAO8B,sBAAsBD,GAE7BE,qBAAqB/B,K,+BCxmBvByH,GAAW,GAEXC,GAAS,SAACxB,GAEd,IAAIyB,EAAI,qBAAqBC,GAAQ1B,EAAKtH,OAAOiJ,KACjDvF,OAAOwF,SAASC,OAAO,QAAQ7B,EAAKtH,OAAOiJ,IAC3CG,KAAMC,IAAIN,GACTO,MAAK,SAAAC,GACJ,IAAMxL,EAAMwL,EAAIjC,KACZxF,EAAIE,KAAKwH,UAAUzL,GACvB8D,GAAaC,OAIXkH,GAAQ,SAACvB,GACb,IAAI,IAAIgC,EAAE,EAAEA,EAAEZ,GAAS9B,OAAO0C,IAC5B,GAAGhC,GAAIoB,GAASY,GAAGC,GACjB,OAAOb,GAASY,GAAG1H,KAGvB,MAAO,I,IAiBY4H,G,kDAEnB,WAAY/L,GAAQ,uCACZA,G,qDAGR,WACE,IAAIgM,EAAO5K,KAAKpB,MAAMiM,KAEtBC,KADQ,2BACI,SAASxC,GACnBuB,GAASpG,KAAK6E,MACbgC,MAAK,SAAShC,GACZsC,GACD3B,YAAW,YA3BZ,SAAmB4B,GACxB,IAAI,IAAIJ,EAAE,EAAEA,EAAEZ,GAAS9B,OAAO0C,IAC5B,GAAGZ,GAASY,GAAGC,IAAIG,EAAK,CACtB,IAAId,EAAI,qBAAqBC,GAAQa,GACrCT,KAAMC,IAAIN,GACTO,MAAK,SAAAC,GACJ,IAAMxL,EAAMwL,EAAIjC,KACZxF,EAAIE,KAAKwH,UAAUzL,GACvB8D,GAAaC,OAmBSiI,CAAUH,KAAU,W,oBAKhD,WACE,OACE,8BACA,eAACI,EAAA,EAAD,CAAWC,KAAM,EAAjB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAeC,UAAU,MAAzB,+DADiB,aAGlBvB,GAASpL,KAAI,SAAC4M,GAAD,OACZ,eAACH,EAAA,EAAD,WACE,qBACEI,OAAM,UAAKC,YAAL,mBAAsCF,EAAKG,KACjDvB,IAAKoB,EAAKX,GACVe,QAAQ,OACR1L,QAAS+J,KAEX,cAAC4B,EAAA,EAAD,CACEC,MAAON,EAAKM,MACZC,SAAUP,EAAKQ,KACfC,WACE,cAACC,EAAA,EAAD,CACEC,GAAI,CAAEnM,MAAO,6BACboM,aAAA,qBAA0BZ,EAAKM,OAFjC,SAIE,cAAC,IAAD,UAfYN,EAAKG,iB,GA1BQ3K,a,gLC5C3C,SAASqL,GAAatN,GACpB,IAAQuN,EAAiCvN,EAAjCuN,QAASC,EAAwBxN,EAAxBwN,cAAeC,EAASzN,EAATyN,KAMhC,OACE,eAACC,GAAA,EAAD,CAAQH,QALU,WAClBA,EAAQC,IAIsBhM,kBAAgB,sBAAsBiM,KAAMA,EAA1E,UACE,cAACE,GAAA,EAAD,CAAa9D,GAAG,sBAAhB,wDACA,wBAAQvH,MAAM,MAAM0D,OAAO,MAAM+E,IAAI,4CAA4CgC,MAAM,uBAAuBa,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,OAKrO,SAASC,KACtB,MAAwBC,IAAMC,UAAS,GAAvC,mBAAOR,EAAP,KAAaS,EAAb,KAUA,OACI,gCACA,cAACnN,EAAA,EAAD,CAAQC,QAAQ,YAAYmN,KAAK,QAAQhN,QAVrB,WACtB+M,GAAQ,IASN,4CACA,cAACZ,GAAD,CAAcG,KAAMA,EAAMF,QAPV,SAAClN,GACnB6N,GAAQ,SCZZ,SAASE,KACP,OACE,eAACC,EAAA,EAAD,CAAYrN,QAAQ,QAAQC,MAAM,gBAAgBqN,MAAM,SAAxD,UACG,kBACD,cAACC,GAAA,EAAD,CAAMtN,MAAM,UAAUuN,KAAK,2BAA3B,wBAEQ,KACP,IAAIrE,MAAOsE,cACX,OAKP,IAkBWC,GACAC,GAnBLC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNnM,SAAU,YAEZmK,MAAO,CACL/K,WAAY8M,EAAME,QAAQ,GAC1BC,KAAM,OAIJC,GAAY,CAChB5M,MAAO,QAGH6M,GAAanB,IAAMoB,YAAW,SAAoBpP,EAAOwI,GAC7D,OAAO,cAAC6G,GAAA,EAAD,aAAOC,UAAU,KAAK9G,IAAKA,GAASxI,OAM9B,SAASuP,GAAiBvP,GACvC,IAAMwP,EAAUZ,KAChB,EAAwBZ,IAAMC,SAASjO,EAAMyN,MAA7C,mBAAOA,EAAP,KAAaS,EAAb,KAYA,OAVAQ,GAAmB,WACjBe,IAAc,EACdvB,GAAQ,IAGVS,GAAoB,WAClBT,GAAQ,GACRwB,MAIA,8BACE,eAAChC,GAAA,EAAD,CAAQiC,YAAU,EAAClC,KAAMA,EAAMF,QAASoB,GAAmBiB,oBAAqBT,GAAhF,UACE,cAACU,EAAA,EAAD,CAAQtH,UAAWiH,EAAQT,OAA3B,SACE,eAACe,EAAA,EAAD,WACE,cAAC3C,EAAA,EAAD,CAAY4C,KAAK,QAAQ9O,MAAM,UAAUE,QAASwN,GAAmBtB,aAAW,QAAhF,SACE,cAAC,KAAD,MAEF,cAACgB,EAAA,EAAD,CAAYrN,QAAQ,KAAKuH,UAAWiH,EAAQzC,MAAO5L,QAASwN,GAA5D,8DAGA,eAACqB,GAAA,EAAD,CAAK5C,GAAI,CAAE6C,QAAS,CAAEC,GAAI,OAAQC,GAAI,WAAtC,UACE,qBAAKvP,MAAO,CAACM,YAAY,OAAO+O,QAAQ,UAAxC,SAAoD,cAAC,GAAD,MACpD,qBAAKrP,MAAO,CAACM,YAAY,OAAO+O,QAAQ,UAAxC,SAAmD,mBAAGzB,KAAK,4BAA4BjG,UAAU,uBAAuB3H,MAAO,CAACM,YAAY,QAAzF,wBAErD,cAAC,KAAD,CAAWC,QAASwN,KACpB,cAAC5N,EAAA,EAAD,CAAQE,MAAM,UAAUE,QAASwN,GAAjC,wBAKJ,gCACE,qBAAK5D,IAAG,UAAK4B,YAAL,oBAA+C/L,MAAOsO,GAAW7D,IAAK,QAC9E,eAAC2E,GAAA,EAAD,CAAKI,UAAU,SAAf,UACA,0LACA,oBAAGxP,MAAO,CAACyP,SAAU,QAArB,8OAAsE,uBAAtE,0MAC8C,uBAD9C,4MAGA,cAACtP,EAAA,EAAD,CAAQC,QAAQ,YAAYJ,MAAO,CAAC0P,OAAO,QAASnC,KAAK,QAAQhN,QAASwN,GAA1E,4CACA,cAAC,GAAD,UAGF,uBACA,cAACP,GAAD,SAMR,ICpFImC,GDoFAd,IAAgB,EACde,GAAS,WASb,OARAxC,IAAMyC,WAAU,WACd,IAAKhB,GAAe,CAClB,IAAMiB,EAAIC,SAASC,cAAc,UACjCF,EAAEG,aAAa,MAAO,2CACtBF,SAASG,KAAKC,YAAYL,GAC1BjB,IAAgB,KAEjB,IAED,mBAAGjB,KAAK,gDAAgDjG,UAAU,wBAAwByI,kBAAgB,QAA1G,4B,mDC9FAC,I,OAAYC,EAAQ,MAkBlBtC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqC,OAAQ,CACJzO,QAAS,OAEb0O,QAAS,CACLpL,OAAO,OACP/E,MAAO,OACPoQ,gBAAiB,WAErBtE,MAAO,CACL/K,WAAY8M,EAAME,QAAQ,GAC1BC,KAAM,GAERqC,IAAK,CACDhB,OAAO,WAEXiB,UAAU,CACNjP,MAAM,OACN+N,SAAS,OACTmB,WAAW,cAEfC,MAAM,CACFnP,MAAM,SAEVoP,OAAQ,CACJrB,SAAS,OACTmB,WAAW,aACXlB,OAAQxB,EAAME,QAAQ,GACtB1M,MAAM,YAIN6M,GAAanB,IAAMoB,YAAW,SAAoBpP,EAAOwI,GAC7D,OAAO,cAAC6G,GAAA,EAAD,aAAOC,UAAU,KAAK9G,IAAKA,GAASxI,OAM9B,SAAS2R,KACtB,IAAMnC,EAAUZ,KAChB,EAAwBZ,IAAMC,UAAS,GAAvC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAAkCD,mBAAS,IAAI9D,MAA/C,mBAAOyH,EAAP,KAAkBC,EAAlB,KACA,EAAiC5D,mBAAS,MAA1C,mBAAO6D,EAAP,KAAkBC,EAAlB,KACA,EAAiC9D,mBAAS,MAA1C,mBAAO+D,EAAP,KACA,GADA,KACwB/D,mBAAS,OAAjC,mBAAagE,GAAb,YAEmB,WACjB/D,GAAQ,KAGV,IAAMgE,EAAc,WAClBhE,GAAQ,IAgBFiE,EAAS,SAACC,GACd,GAAG7B,GAAM8B,SAAS,YACdJ,EAAQG,QACN,GAAG7B,GAAM8B,SAAS,SACpBJ,EAAQG,QACN,GAAG7B,GAAM8B,SAAS,QAAQ,CAC9B,IAAIC,EAAI,IAAIrB,GACZqB,EAAIjO,MAAM+N,GACVA,EAAIhO,KAAKwH,UAAU0G,EAAIC,aACvBN,EAAQG,GAGV5G,KAAMgH,KAAN,uCAAkDJ,EAC/C,CACIK,QAAS,CAAC,eAAgB,oBAC1BC,OAAQ,mBACRC,iBAAiB,EACjBC,yBAAyB,IACzBC,0BAA0B,8BAC1BC,mBAAmB,IAEzBpH,MAAK,SAAAC,GACJxD,QAAQC,IAAIuD,MAEboH,OAAM,SAASC,GACZ7K,QAAQC,IAAI,oCAwCpB,OACE,8BACE,eAACsF,GAAA,EAAD,CAAQnF,UAAWiH,EAAQ2B,OAAQ1D,KAAMA,EAAMF,QAAS2E,EAAatC,oBAAqBT,GAA1F,UACE,eAACW,EAAA,EAAD,CAASvH,UAAWiH,EAAQ4B,QAA5B,UACI,cAACjE,EAAA,EAAD,CAAY4C,KAAK,QAAQ9O,MAAM,UAAUE,QAAS+Q,EAAa7E,aAAW,QAA1E,SACE,cAAC,KAAD,MAEF,cAACgB,EAAA,EAAD,CAAYrN,QAAQ,KAAKuH,UAAWiH,EAAQzC,MAAO5L,QAAS+Q,EAA5D,4CAGA,cAAC,KAAD,CAAW/Q,QAAS+Q,OAEtB,cAAClC,GAAA,EAAD,CAAKzH,UAAWiH,EAAQ8B,IAAxB,SACI,uBAAOhD,MAAM,SAAShM,MAAM,OAA5B,SACI,wBAAOiG,UAAWiH,EAAQ+B,UAA1B,UACA,+BACI,0DACA,6BAAI,cAAC0B,GAAA,EAAD,CAAW1K,UAAWiH,EAAQ+B,UAAW1H,GAAG,QAAQzJ,MAAM,QAAQ8S,YAAY,iCAAQlS,QAAQ,WAAWmS,aAAa,aAE9H,+BACI,0DACA,6BAAI,cAACpS,EAAA,EAAD,CAAQC,QAAQ,YAAYG,QAnGrC,WACX,IAAIiS,EAAYzC,SAAS0C,eAAe,QACpCC,EAAa,IAAIC,WACrBH,EAAUI,SAAW,WACjB,IAAIC,EAAOL,EAAUM,MAAM,GACvBD,GAAOA,EAAKE,OAChBpD,GAAMkD,EAAKE,KAAKC,cAChBN,EAAWO,WAAWJ,KAE1BH,EAAWQ,OAAS,kBAAM3B,EAASmB,EAAWS,SAC9CX,EAAUY,SAyFyDzL,UAAWiH,EAAQkC,OAAQuC,UAAW,cAAC,KAAD,IAArF,2CAER,+BACI,0DACA,6BAAI,cAAC,KAAD,CAAY1L,UAAWiH,EAAQ+B,UAAW2C,SAAUtC,EAAW9P,SAAU,SAACmL,GAAD,OAAU4E,EAAa5E,WAExG,+BACI,0DACA,6BAAI,cAAClM,EAAA,EAAD,CAAQC,QAAQ,YAAYG,QA1CpC,WACZ,IAAIiS,EAAYzC,SAAS0C,eAAe,QACpCC,EAAa,IAAIC,WACrBH,EAAUI,SAAW,WACjB,IAAIC,EAAOL,EAAUM,MAAM,GACvBD,GAAOA,EAAKE,OAChBpD,GAAMkD,EAAKE,KAAKC,cAChBN,EAAWa,cAAcV,KAE7BH,EAAWQ,OAAS,kBAAM/B,EAAYuB,EAAWS,SACjDX,EAAUY,SAgC0DzL,UAAWiH,EAAQkC,OAAQuC,UAAW,cAAC,KAAD,IAAtF,2CAER,6BACI,oBAAIG,QAAQ,IAAZ,SAAgB,qBAAK7L,UAAWiH,EAAQiC,MAAO1G,IAAKiH,QAExD,6BACI,oBAAIoC,QAAQ,IAAZ,SAAgB,qBAAK7L,UAAWiH,EAAQiC,MAAO1G,IAAK+G,oBC/K5E,IAkEIvB,GA2COb,GA7GPuB,GAAYC,EAAQ,KACpBmD,GAAWnD,EAAQ,KACnBoD,GAAYpD,EAAQ,KAAUoD,UAC5BC,GAAc,IAEd3F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0F,KAAM,CACJvE,QAAS,QAEXlB,OAAQ,CACN/I,OAAO,OACPyO,WAAY3F,EAAM4F,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQ9F,EAAM4F,YAAYE,OAAOC,MACjCC,SAAUhG,EAAM4F,YAAYI,SAASC,iBAGzCC,YAAa,CACX1S,MAAM,eAAD,OAAiBiS,GAAjB,OACLvS,WAAYuS,GACZE,WAAY3F,EAAM4F,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQ9F,EAAM4F,YAAYE,OAAOK,QACjCH,SAAUhG,EAAM4F,YAAYI,SAASI,kBAGzCC,WAAY,CACVjU,YAAa4N,EAAME,QAAQ,IAE7BoG,KAAM,CACJnF,QAAS,QAEXoF,OAAQ,CACN/S,MAAOiS,GACPe,WAAY,GAEdC,YAAa,CACXjT,MAAOiS,GACPiB,UAAW,cAEbC,aAAa,yBACXxF,QAAS,OACTyF,WAAY,SACZhT,QAASoM,EAAME,QAAQ,EAAG,IACvBF,EAAM6G,OAAOvE,SAJN,IAKVwE,eAAgB,aAElBC,QAAS,CACPC,SAAU,EACVpT,QAASoM,EAAME,QAAQ,GACvByF,WAAY3F,EAAM4F,YAAYC,OAAO,SAAU,CAC7CC,OAAQ9F,EAAM4F,YAAYE,OAAOC,MACjCC,SAAUhG,EAAM4F,YAAYI,SAASC,gBAEvC/S,YAAY,KAEd+T,aAAc,CACZtB,WAAY3F,EAAM4F,YAAYC,OAAO,SAAU,CAC7CC,OAAQ9F,EAAM4F,YAAYE,OAAOK,QACjCH,SAAUhG,EAAM4F,YAAYI,SAASI,iBAEvClT,WAAY,GAEdgU,eAAgB,CACdhU,WAAY,YAMVkJ,GAAS,WACb,IAAIkI,EAAYzC,SAAS0C,eAAe,QACpCC,EAAa,IAAIC,WACrBH,EAAUI,SAAW,WACjB,IAAIC,EAAOL,EAAUM,MAAM,GACvBD,GAAOA,EAAKE,OAChBpD,GAAMkD,EAAKE,KAAKC,cAChBzL,QAAQC,IAAIqL,EAAKE,MACjBxL,QAAQC,IAAIqL,EAAKtF,MACjBhG,QAAQC,IAAIqL,EAAK7O,MACjB0O,EAAWO,WAAWJ,KAE1BH,EAAWQ,OAAS,kBAAM3B,GAASmB,EAAWS,SAC9CX,EAAUY,SAGN7B,GAAS,SAACC,GACd,GAAG7B,GAAM8B,SAAS,YACdpO,GAAamO,QACX,GAAG7B,GAAM8B,SAAS,SACtBpO,GAAamO,QACT,GAAG7B,GAAM8B,SAAS,QAAQ,CAC9B,IAAIC,EAAI,IAAIrB,GACZqB,EAAIjO,MAAM+N,GACVnO,GAAaG,KAAKwH,UAAU0G,EAAIC,mBAC5B,GAAGhC,GAAM8B,SAAS,QAAQ,CAC9B,IAAI4D,GAAM,IAAI3B,IAAY4B,gBAAgB9D,GACtC+D,EAAI9B,GAAS4B,GACjBhS,GAAaG,KAAKwH,UAAUuK,MAI5BC,GAAY,EAEZC,GAAK,CAAC9P,GAAQK,IAAIL,GAAQkC,KAExB6N,GAAU,WLAS,IAAC1V,EAAMqI,IKC9BmN,IAAaA,GAAY,GAAGC,GAAKlN,QLDTvI,EKEZyV,GAAKD,KLDNG,gBACE3V,EAAM2V,QAEjB1W,EAAI2W,SAAS5V,GACbf,EAAI+H,GAAG,cAAc,WACjBC,GAAWhI,GACXiI,GAAOjI,GACJD,GAAY2J,GAAmB1J,GACzB,IAANoJ,GAAQlB,GAAUlI,OKFd,SAAS4W,GAAUzW,GAChC,IAAMwP,EAAUZ,KACVE,EAAQ4H,cACd,EAAwB1I,IAAMC,UAAS,GAAvC,mBAAOR,EAAP,KAAaS,EAAb,KAEMyI,EAAmB,WACvBzI,GAAQ,IAGJ0I,EAAoB,WACxB1I,GAAQ,IAUV,OAPAwB,GAAM,WACD1P,EAAM8F,SACP6Q,IACAtM,WAAWuM,EAAkB,OAK/B,sBAAKrO,UAAWiH,EAAQgF,KAAxB,UACE,cAACqC,EAAA,EAAD,IACA,cAAChH,EAAA,EAAD,CACEtH,UAAWuO,YAAKtH,EAAQT,OAAT,eACZS,EAAQwF,YAAcvH,IAF3B,SAKE,eAACqC,EAAA,EAAD,WACE,cAAC3C,EAAA,EAAD,CACElM,MAAM,UACNoM,aAAW,cACXlM,QAASwV,EACT5G,KAAK,QACLxH,UAAWuO,YAAKtH,EAAQ2F,WAAY1H,GAAQ+B,EAAQ4F,MALtD,SAOE,cAAC,IAAD,MAEF,cAAC/G,EAAA,EAAD,CAAYrN,QAAQ,KAAK+V,QAAM,EAACvK,UAAU,MAAMY,GAAI,CAAE6C,QAAS,CAAEC,GAAI,OAAQC,GAAI,UAAjF,8DAGA,qBAAK5H,UAAWiH,EAAQwG,eAAxB,SACA,eAACgB,GAAA,EAAD,CAAMtQ,WAAS,EAACgP,WAAW,SAASnN,UAAWiH,EAAQgF,KAAvD,UACA,cAACyC,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IACxC,cAACC,GAAA,EAAD,CAASrK,MAAM,2BAAOsK,UAAU,SAAhC,SACE,cAAClK,EAAA,EAAD,CAAYlM,MAAM,UAAUE,QAAS+J,GAArC,SACE,cAAC,KAAD,QAGF,uBAAOtG,KAAK,OAAO8N,OAAO,2BAA2B7I,GAAG,OAAOjJ,MAAO,CAAEqP,QAAS,UACjF,cAACmH,GAAA,EAAD,CAASrK,MAAM,2BAAOsK,UAAU,SAAhC,SACA,cAAClK,EAAA,EAAD,CAAYlM,MAAM,UAAUE,QAASmV,GAArC,SACE,cAAC,KAAD,QAGF,cAACc,GAAA,EAAD,CAASrK,MAAM,2BAAOsK,UAAU,SAAhC,SACA,cAAClK,EAAA,EAAD,CAAYlM,MAAM,UAAUE,QAASiE,GAArC,SACE,cAAC,KAAD,QAGF,cAACgS,GAAA,EAAD,CAASrK,MAAM,uCAASsK,UAAU,SAAlC,SACA,cAAClK,EAAA,EAAD,CAAYlM,MAAM,UAAUE,QAASuN,GAArC,SACE,cAAC,KAAD,QAUF,cAACuI,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,cAK9C,eAACG,EAAA,EAAD,CACE/O,UAAWiH,EAAQ6F,OACnBrU,QAAQ,aACRuW,OAAO,OACP9J,KAAMA,EACN+B,QAAS,CACPgI,MAAOhI,EAAQ+F,aANnB,UASE,qBAAKhN,UAAWiH,EAAQiG,aAAxB,SACE,cAACtI,EAAA,EAAD,CAAYhM,QAASyV,EAArB,SACuB,QAApB9H,EAAMQ,UAAsB,cAAC,IAAD,IAAsB,cAAC,IAAD,QAGvD,cAAC2H,EAAA,EAAD,IACA,cAACQ,EAAA,EAAD,UAAM,cAAC,GAAD,CAAexL,KAAMjM,EAAMiM,SACjC,cAACgL,EAAA,EAAD,OAEF,uBACE1O,UAAWuO,YAAKtH,EAAQqG,QAAT,eACZrG,EAAQuG,aAAetI,IAF5B,UAKE,qBAAKlF,UAAWiH,EAAQiG,eACxB,eAACiC,EAAA,EAAD,CAAWC,SAAS,KAAKpP,UAAWiH,EAAQ9I,UAAWvF,QAASyV,EAAhE,UACE,cAAC,GAAD,IACA,cAAC,EAAD,UAGJ,cAACrH,GAAD,CAAkB9B,KAAMzN,EAAM8F,SAC9B,cAAC6L,GAAD,OCrPN,IAWaiG,GAAQ,WACnB,IAAMtM,EAAWuM,cACXC,EAAIC,GAAOzM,EAASC,QAC1B,OAAGuM,EAAG,KAEF,cAACrB,GAAD,CAAWxK,KAAM6L,EAAG,KAAUhS,QAAQ,IAItC,cAAC2Q,GAAD,CAAW3Q,QAAQ,KAKnBiS,GAAO,SAACxM,GAGZ,IAFA,IAAIuM,EAAM,IAAIE,OACVC,EAAK1M,EAAO2M,UAAU,GAAGC,MAAM,KAC3BtM,EAAE,EAAEoM,EAAKpM,GAAGA,IAAK,CACrB,IAAIuM,EAAKH,EAAKpM,GAAGsM,MAAM,KACvBL,EAAIM,EAAG,IAAIA,EAAG,GAElB,OAAON,GAGMO,GAnCL,WACR,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAY1S,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAO0S,KAAK,IAAI1S,QAAS,8DCGlB2S,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/M,MAAK,YAAkD,IAA/CgN,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFtI,SAAS0C,eAAe,SAM1BkF,O","file":"static/js/main.70abd99f.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\nimport {startMovie,stopMovie,setPhase,ieRunning,setSpeed} from './MapPane'\r\n\r\nexport let setSlider;\r\nexport let endRunning;\r\nlet setRunning;\r\n\r\nlet spId=0;\r\nlet speedChange;\r\n\r\nexport default class ControlBar extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          play_state: \"開始\",\r\n          val:0,\r\n          label:\"低速\"\r\n        }\r\n    };\r\n\r\n    componentDidMount(){\r\n        setSlider=(value)=>{\r\n            this.setState({val:Math.ceil(value*100)});\r\n        };\r\n        endRunning=()=>{\r\n            stopMovie();\r\n            this.setState({play_state: \"開始\"});\r\n        };\r\n        setRunning=()=>{\r\n            if(this.state.play_state===\"開始\"){\r\n                startMovie();\r\n                this.setState({play_state: \"停止\"});\r\n            }else{\r\n                stopMovie();\r\n                this.setState({play_state: \"開始\"});\r\n            }\r\n        };\r\n        speedChange=()=>{\r\n            spId=(spId+1)%3;\r\n            if(spId===0){\r\n                setSpeed(1.0);\r\n                this.setState({label:\"低速\"});\r\n            }else if(spId===1){\r\n                setSpeed(2.0);\r\n                this.setState({label:\"中速\"});\r\n            }else{\r\n                setSpeed(3.0);\r\n                this.setState({label:\"高速\"});\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <div style={bar_style}>\r\n        <ListItem>\r\n        <Button variant=\"contained\" color=\"primary\" style={{marginRight:\"20px\"}} onClick={setRunning}>{this.state.play_state}</Button>\r\n        <Slider\r\n          value={this.state.val}\r\n          getAriaValueText={onChangeProgress}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          marks\r\n          min={0}\r\n          max={100}\r\n          onChange={onChangeVal}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" style={{marginLeft:\"20px\"}} onClick={speedChange}>{this.state.label}</Button>\r\n        </ListItem>\r\n        </div>;\r\n    };\r\n}\r\n\r\nconst onChangeProgress=(value)=>{\r\n\r\n};\r\n\r\nconst onChangeVal=(val)=>{\r\n    if(!ieRunning())setPhase(val.target.value/100.0);\r\n};\r\n\r\nconst bar_style = {\r\n    float: \"left\",\r\n    width: \"96%\", \r\n    lineHeight: \"32px\",\r\n    borderRadius: 4,\r\n    border: \"none\",\r\n    padding: \"0px 20px 0px 20px\",\r\n    color: \"#fff\",\r\n    background: \"#ffffff88\",\r\n    position: \"absolute\",\r\n    bottom: 35,\r\n    left: \"2%\",\r\n    zindex:255\r\n};  ","import React, { Component } from 'react';\r\n//import mapbox from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './MapPane.css';\r\nimport {Deck} from '@deck.gl/core';\r\nimport * as turf from '@turf/turf'\r\nimport {setSlider,endRunning} from './ControlBar';\r\nimport mapbox from 'mapbox-gl/dist/mapbox-gl-csp';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\r\nmapbox.workerClass = MapboxWorker;\r\n\r\nlet targetRoute;\r\nlet map;\r\nlet cameraAltitude = 500;\r\nlet routeDistance;\r\nlet speed;\r\nlet start;\r\nlet running=false;\r\nlet phase;\r\nlet angle=0.0;\r\nlet camera_angle=[-0.005,-0.005];\r\nlet speedMul=1.0;\r\nlet pointer;\r\nlet angleVal=0;\r\nlet runAni;\r\n\r\n\r\nconst dem={\r\n    \"type\": \"raster-dem\",\r\n    \"tiles\": [\r\n//      \"https://cyberjapandata.gsi.go.jp/xyz/dem_png/{z}/{x}/{y}.png\"\r\n      \"https://www.termat.net/dem/{z}/{x}/{y}\"\r\n    ],\r\n    \"tileSize\": 256,\r\n    \"maxzoom\": 14,\r\n    \"attribution\": \"<a href='https://maps.gsi.go.jp/development/ichiran.html'>地理院タイル</a>\"\r\n  };\r\n\r\n const mvt={\r\n    \"type\": \"vector\",\r\n    \"glyphs\": \"https://maps.gsi.go.jp/xyz/noto-jp/{fontstack}/{range}.pbf\",\r\n    \"tiles\": [\"/potaling/mvt/{z}/{x}/{y}.pbf\"],\r\n    \"minzoom\":12,\r\n    \"maxzoom\": 17,\r\n    \"attribution\": \"<a href='https://github.com/gsi-cyberjapan/gsimaps-vector-experiment'>地理院ベクトルタイル</a>\"\r\n  };\r\n\r\n  const vector={\r\n    \"type\": \"vector\",\r\n    \"glyphs\": \"https://maps.gsi.go.jp/xyz/noto-jp/{fontstack}/{range}.pbf\",\r\n    \"tiles\": [\r\n        \"https://cyberjapandata.gsi.go.jp/xyz/experimental_bvmap/{z}/{x}/{y}.pbf\"\r\n    ],\r\n    \"minzoom\":9,\r\n    \"maxzoom\": 16\r\n  };\r\n\r\nexport const setSpeed=(val)=>{\r\n    speedMul=val;\r\n}\r\n\r\nexport const ieRunning=()=>{\r\n    return running;\r\n};\r\n\r\nexport const jumpTo=(data)=>{\r\n    map.jumpTo({center: data});\r\n};\r\n\r\nconst propcLine=(c)=>{\r\n    c.forEach(e =>{\r\n        targetRoute.push(e);\r\n    });\r\n}\r\n\r\nexport const parseGeojson=(str)=>{\r\n    stopMovie();\r\n    let json=JSON.parse(str);\r\n    targetRoute=[];\r\n\r\n    let array=json.features;\r\n    array.forEach(e => {\r\n        let c=e.geometry.coordinates;\r\n        if(e.geometry.type===\"Point\"){\r\n            targetRoute.push(c);\r\n        }else if(e.geometry.type===\"LineString\"){\r\n            propcLine(c);\r\n        }\r\n    });\r\n    if (map.getLayer('line'))map.removeLayer('line');\r\n    if (map.getSource('trace'))map.removeSource('trace');\r\n    if (map.getLayer('point'))map.removeLayer('point');\r\n    if (map.getSource('point'))map.removeSource('point');\r\n    setGeojsonLayer(map);\r\n    fitBounds();\r\n    start=null;\r\n    phase=0.0;\r\n};\r\n\r\nexport const setPhase=(val)=>{\r\n    phase=val;\r\n    if(phase===0.0)start=null;\r\n    if(targetRoute)frame();\r\n}\r\n\r\nexport const startMovie=()=>{\r\n    running=true;\r\n    if(targetRoute)requestAnimationFrame(frame);\r\n};\r\n\r\nexport const stopMovie=()=>{\r\n    running=false;\r\n    cancelAnimationFrame(runAni);\r\n    start=null;\r\n};\r\n\r\nexport const fitBounds=()=>{\r\n    if(!targetRoute)return;\r\n    let xmin=100000;\r\n    let xmax=-10000;\r\n    let ymin=100000;\r\n    let ymax=-10000;\r\n    targetRoute.forEach(element => {\r\n        xmin=Math.min(xmin,element[0]);\r\n        xmax=Math.max(xmax,element[0]);\r\n        ymin=Math.min(ymin,element[1]);\r\n        ymax=Math.max(ymax,element[1]);\r\n    });\r\n    map.fitBounds([\r\n        [xmin, ymin],\r\n        [xmax, ymax]\r\n    ]);\r\n};\r\n\r\nexport const changeStyle=(style,flg)=>{\r\n    if(style.terrain){\r\n        delete style.terrain\r\n    }    \r\n    map.setStyle(style);\r\n    map.on('style.load', () => {\r\n        setTerrain(map);\r\n        setSky(map);\r\n        if(targetRoute)updateGeojsonLayer(map);\r\n        if(flg===0)setVector(map);\r\n    });\r\n};\r\n\r\nconst viewState = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    longitude: 139.692704,\r\n    latitude: 35.689526,\r\n    zoom: 14,\r\n    maxZoom: 18,\r\n    pitch: 65\r\n };\r\n\r\nexport default class MapPane extends Component {\r\n//    static SAT='mapbox://styles/mapbox/satellite-v9';\r\n    static STD='/potaling/std.json';\r\n    static PHT= {\r\n            \"version\": 8,\r\n            \"glyphs\": \"https://maps.gsi.go.jp/xyz/noto-jp/{fontstack}/{range}.pbf\",\r\n            \"sources\": {\r\n                \"t_pale\": {\r\n                    \"type\": \"raster\",\r\n                    \"tiles\": [\r\n                        \"https://cyberjapandata.gsi.go.jp/xyz/seamlessphoto/{z}/{x}/{y}.jpg\"\r\n                    ],\r\n                    \"tileSize\": 256,\r\n                    \"attribution\": \"<a href='https://maps.gsi.go.jp/development/ichiran.html'>地理院タイル（全国最新写真）</a>\"\r\n                }\r\n            },\r\n            \"layers\": [{\r\n                \"id\": \"t_pale\",\r\n                \"type\": \"raster\",\r\n                \"source\": \"t_pale\",\r\n                \"minzoom\": 8,\r\n                \"maxzoom\": 18\r\n            }]\r\n        };\r\n\r\n    componentDidMount() {\r\n        map = new mapbox.Map({\r\n            accessToken:'pk.eyJ1IjoidGVybWF0IiwiYSI6ImNrcGprNXE2ajBjdmQybnFyMmI5d3lrN2UifQ.EyZTUEX49xUnq6i2y0Na2Q',\r\n            container: this.container,\r\n            hash: true,\r\n            style: MapPane.PHT,\r\n            center: [139.692704, 35.689526], \r\n            zoom: 14,\r\n            maxZoom: 18,\r\n            minZoom: 8,\r\n            pitch: 65,\r\n            bearing: 0,\r\n            interactive: true,\r\n            localIdeographFontFamily: false,\r\n//            antialias: true \r\n        });\r\n\r\n        this.deckgl = new Deck({\r\n            gl: map.painter.context.gl,\r\n            layers: [],\r\n            initialViewState:viewState\r\n        });\r\n\r\n        map.addControl(new mapbox.FullscreenControl());\r\n        map.addControl(new mapbox.NavigationControl());\r\n\r\n        map.on('load', () => {\r\n            setTerrain(map);\r\n            setSky(map);\r\n//            setMvt(map);\r\n            setGeojsonLayer(map);\r\n            setVector(map);\r\n        });\r\n\r\n        map.on('touchstart', (e)=> {\r\n            pointer=e.point;\r\n        });\r\n        map.on('touchend', (e)=> {\r\n            pointer=null;\r\n        });\r\n\r\n        map.on('mousedown', (e)=> {\r\n            pointer=e.point;\r\n        });\r\n        map.on('mouseup', (e)=> {\r\n            pointer=null;\r\n        });\r\n        map.on('mouseout', (e)=> {\r\n            pointer=null;\r\n        });\r\n        map.on('mousemove', (e)=> {\r\n            move(e);\r\n        });\r\n        map.on('touchmove', (e)=> {\r\n            move(e);\r\n        });\r\n        map.on('wheel',(e)=>{\r\n            if(running){\r\n                e.preventDefault();\r\n                console.log(e.originalEvent.deltaY>0);\r\n                if(e.originalEvent.deltaY>0){\r\n                    cameraAltitude=Math.min(2000,cameraAltitude+50);\r\n                }else{\r\n                    cameraAltitude=Math.max(200,cameraAltitude-50);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div className={'map'} ref={(e) => (this.container = e)} />;\r\n    }\r\n}\r\n\r\nconst move=(e)=>{\r\n    if(running&&pointer){\r\n        e.preventDefault();\r\n        let x0=pointer.x;\r\n        let y0=pointer.y;\r\n        let x1=e.point.x;\r\n        let y1=e.point.y;\r\n        const e2 = e.originalEvent;\r\n        let flg=false;\r\n        if (e2 && 'touches' in e2) {\r\n            if (e2.touches.length > 1) {\r\n                flg=true;\r\n            }\r\n        }\r\n        if (flg) {\r\n            if(y1>y0){\r\n                cameraAltitude=Math.min(2000,cameraAltitude+50);\r\n            }else{\r\n                cameraAltitude=Math.max(200,cameraAltitude-50);\r\n            }\r\n        }else{\r\n            if(x1>x0){\r\n                angleVal=(angleVal+5)%360;\r\n                angle=(angleVal/180.0)*Math.PI;\r\n                camera_angle=[\r\n                    -0.005*Math.cos(angle)-(-0.005)*Math.sin(angle),\r\n                    -0.005*Math.sin(angle)+(-0.005)*Math.cos(angle)\r\n                ];\r\n            }else{\r\n                angleVal=(angleVal-5)%360;\r\n                angle=(angleVal/180.0)*Math.PI;\r\n                camera_angle=[\r\n                    -0.005*Math.cos(angle)-(-0.005)*Math.sin(angle),\r\n                    -0.005*Math.sin(angle)+(-0.005)*Math.cos(angle)\r\n                ];\r\n            }\r\n        }\r\n        if(pointer)pointer=e.point;\r\n    }\r\n};\r\n\r\nconst updateGeojsonLayer=(mapobj)=>{\r\n    if (!mapobj.getSource('trace')){\r\n        mapobj.addSource('trace', {\r\n            type: 'geojson',\r\n            data: {\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'LineString',\r\n                'coordinates': targetRoute\r\n                }\r\n            }\r\n        });\r\n    }\r\n    if (!mapobj.getLayer('line')){\r\n        mapobj.addLayer({\r\n            type: 'line',\r\n            source: 'trace',\r\n            id: 'line',\r\n            paint: {\r\n                'line-color': 'orange',\r\n                'line-width': 5\r\n            },\r\n            layout: {\r\n                'line-cap': 'round',\r\n                'line-join': 'round'\r\n            }\r\n        });\r\n    }\r\n    if (!mapobj.getSource('point')){\r\n        let point = {\r\n            'type': 'FeatureCollection',\r\n            'features': [{\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': targetRoute[0]\r\n                }\r\n            }]\r\n        };\r\n        mapobj.addSource('point', {\r\n            'type': 'geojson',\r\n            'data': point \r\n        });\r\n    }\r\n    if (!mapobj.getLayer('point')){\r\n        mapobj.addLayer({\r\n            'id': 'point',\r\n            'source': 'point',\r\n            'type': 'circle',\r\n            'paint': {\r\n                'circle-color': \"#ff0000\",\r\n                'circle-radius':8,\r\n                'circle-stroke-width': 4,\r\n                'circle-stroke-opacity': 0.05\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nconst setGeojsonLayer=(mapobj)=>{\r\n    if(targetRoute){\r\n        mapobj.addSource('trace', {\r\n            type: 'geojson',\r\n            data: {\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'LineString',\r\n                'coordinates': targetRoute\r\n                }\r\n            }\r\n        });\r\n        mapobj.addLayer({\r\n            type: 'line',\r\n            source: 'trace',\r\n            id: 'line',\r\n            paint: {\r\n                'line-color': 'orange',\r\n                'line-width': 5\r\n            },\r\n            layout: {\r\n                'line-cap': 'round',\r\n                'line-join': 'round'\r\n            }\r\n        });\r\n        let point = {\r\n            'type': 'FeatureCollection',\r\n            'features': [{\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'Point',\r\n                    'coordinates': targetRoute[0]\r\n                }\r\n            }]\r\n        };\r\n        mapobj.addSource('point', {\r\n            'type': 'geojson',\r\n            'data': point \r\n        });\r\n        mapobj.addLayer({\r\n            'id': 'point',\r\n            'source': 'point',\r\n            'type': 'circle',\r\n            'paint': {\r\n                'circle-color': \"#ff0000\",\r\n                'circle-radius':8,\r\n                'circle-stroke-width': 4,\r\n                'circle-stroke-opacity': 0.05\r\n            },\r\n        });\r\n        routeDistance = turf.length(turf.lineString(targetRoute));\r\n        speed=1/((routeDistance/10)*60000);\r\n    }\r\n};\r\n\r\nconst setTerrain=(mapobj)=>{\r\n    if (!mapobj.getSource('mapbox-dem')){\r\n        mapobj.addSource('mapbox-dem', dem);\r\n        mapobj.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.25 });\r\n    }\r\n};\r\n\r\nconst setMvt=(mapobj)=>{\r\n    if (!mapobj.getSource('mvt')){\r\n        mapobj.addSource('mvt', mvt);\r\n\t\tmapobj.addLayer({\r\n\t\t\t\"id\": \"bldg\",\r\n\t\t\t\"type\": \"fill-extrusion\",\r\n\t\t\t\"source\": \"mvt\",\r\n\t\t\t\"source-layer\": \"BUILDING\",\r\n\t\t\t\"minzoom\": 12,\r\n\t\t\t\"maxzoom\": 17,\r\n\t\t\t\"paint\": {\r\n\t\t\t\t\"fill-extrusion-color\": [\r\n\t\t\t\t\t'interpolate',\r\n\t\t\t\t\t['linear'],\r\n\t\t\t\t\t[\"get\", \"height\"],\r\n\t\t\t\t\t\t0,'blue',\r\n\t\t\t\t\t\t10,'royalblue',\r\n\t\t\t\t\t\t20,'cyan',\r\n\t\t\t\t\t\t30,'lime',\r\n\t\t\t\t\t\t40,'yellow',\r\n\t\t\t\t\t\t50,'orange',\r\n\t\t\t\t\t\t60,'red'],\r\n\t\t\t\t\"fill-extrusion-height\": [\"get\", \"height\"],\r\n\t\t\t\t'fill-extrusion-opacity': 0.75,\r\n\t\t\t}\r\n\t\t});\r\n    }\r\n};\r\n\r\nconst setVector=(mapobj)=>{\r\n    if (!mapobj.getSource('vector')){\r\n        mapobj.addSource('vector', vector);\r\n        mapobj.addLayer({\r\n            \"id\": \"vector\",\r\n            \"type\": \"line\",\r\n            \"source\": \"vector\",\r\n            \"source-layer\": \"road\",\r\n            \"minzoom\": 9,\r\n            \"maxzoom\": 18,\r\n            \"paint\": {\r\n                    'line-opacity': 1.0,\r\n                    'line-color': 'rgb(80, 80, 80)',\r\n                    'line-width': 2\r\n                }\r\n        });\r\n        mapobj.addLayer({\r\n            \"id\": \"label\",\r\n            \"type\": \"symbol\",\r\n            \"source\": \"vector\",\r\n            \"source-layer\": \"label\",\r\n            \"minzoom\": 9,\r\n            \"maxzoom\": 18,\r\n            \"layout\": {\r\n                'text-size': 16,\r\n                \"text-rotate\":[\"case\",[\"==\",[\"get\",\"arrng\"],2],[\"*\",[\"+\",[\"to-number\",[\"get\",\"arrngAgl\"]],90],-1],[\"*\",[\"to-number\",[\"get\",\"arrngAgl\"]],-1]],\r\n                \"text-field\":[\"get\",\"knj\"],\r\n                \"text-font\":[\"NotoSansCJKjp-Regular\"],\r\n                \"text-allow-overlap\": true,\r\n                \"text-keep-upright\":true,\r\n                \"text-allow-overlap\":false,\r\n                \"symbol-z-order\":\"auto\",\r\n                \"text-max-width\":60,\r\n                'text-variable-anchor': ['top', 'bottom', 'left', 'right'],\r\n                'text-justify': 'auto',\r\n                \"symbol-placement\": \"point\"\r\n            },\r\n            \"paint\": {\r\n                \"text-color\": \"black\",\r\n                \"text-opacity\": 1.0,\r\n                \"text-halo-color\": \"rgba(255,255,255,0.95)\",\r\n                \"text-halo-width\": 1.5,\r\n                \"text-halo-blur\": 1\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst setSky=(mapobj)=>{\r\n    if (!mapobj.getLayer('sky')){\r\n        mapobj.addLayer({\r\n            'id': 'sky',\r\n            'type': 'sky',\r\n            'paint': {\r\n            'sky-type': 'atmosphere',\r\n            'sky-atmosphere-sun': [0.0, 0.0],\r\n            'sky-atmosphere-sun-intensity': 15\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n/*\r\nconst checkView=()=>{\r\n    if(!targetRoute)return;\r\n    if(!phase)phase=0;\r\n    let alongRoute = turf.along(\r\n        turf.lineString(targetRoute),\r\n        routeDistance * phase\r\n    ).geometry.coordinates;\r\n    let camera = map.getFreeCameraOptions();\r\n    camera.position = mapbox.MercatorCoordinate.fromLngLat({\r\n        lng: alongRoute[0]+camera_angle[0],\r\n        lat: alongRoute[1]+camera_angle[1]\r\n        },\r\n        cameraAltitude\r\n    ); \r\n    camera.lookAtPoint({\r\n        lng: alongRoute[0],\r\n        lat: alongRoute[1]\r\n    });\r\n    map.setFreeCameraOptions(camera);\r\n    let point = {\r\n        'type': 'FeatureCollection',\r\n        'features': [{\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'Point',\r\n                'coordinates': alongRoute\r\n            }\r\n        }]\r\n    };\r\n    map.getSource('point').setData(point);\r\n};\r\n*/\r\n/*\r\nclass TestControl01 {\r\n    onAdd(map) {\r\n        this.map = map;\r\n        const bt1 = document.createElement('button');\r\n        bt1.innerHTML = '<button class=\"mapboxgl-ctrl-zoom-in\" type=\"button\" title=\"Zoom in\" aria-label=\"Zoom in\" aria-disabled=\"false\"><span class=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\"></span></button>';\r\n        bt1.addEventListener('click', (e) => {\r\n           cameraAltitude=Math.min(2000,cameraAltitude+100);\r\n        });\r\n        const bt2 = document.createElement('button');\r\n        bt2.innerHTML = '<button class=\"mapboxgl-ctrl-zoom-in\" type=\"button\" title=\"Zoom in\" aria-label=\"Zoom in\" aria-disabled=\"false\"><span class=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\"></span></button>';\r\n        bt2.addEventListener('click', (e) => {\r\n            cameraAltitude=Math.max(200,cameraAltitude-100);\r\n        });\r\n        this.container = document.createElement('div');\r\n        this.container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';\r\n        this.container.appendChild(bt1);\r\n        this.container.appendChild(bt2);\r\n        return this.container;\r\n    }\r\n  \r\n    onRemove() {\r\n        this.container.parentNode.removeChild(this.container);\r\n        this.map = undefined;\r\n    }\r\n}\r\n*/\r\n\r\nconst frame=(time)=>{\r\n    if (!start){\r\n        start = time;\r\n//        phase=0.0;\r\n    }else{\r\n        if (typeof time !== \"undefined\") {\r\n            let dd=time-start;\r\n            start=time;\r\n            phase=phase+speed*dd*speedMul*0.5;\r\n        }else{\r\n            start=Date.now();\r\n        }\r\n    }\r\n    setSlider(phase);\r\n    if (phase >= 1) {\r\n        setTimeout(function () {\r\n            running=false;\r\n            endRunning();\r\n        }, 1500);\r\n    }\r\n    let alongRoute = turf.along(\r\n        turf.lineString(targetRoute),\r\n        routeDistance * phase\r\n    ).geometry.coordinates;\r\n    let camera = map.getFreeCameraOptions();\r\n    camera.position = mapbox.MercatorCoordinate.fromLngLat({\r\n            lng: alongRoute[0]-camera_angle[0],\r\n            lat: alongRoute[1]-camera_angle[1]\r\n        },\r\n        cameraAltitude\r\n    ); \r\n    camera.lookAtPoint({\r\n        lng: alongRoute[0],\r\n        lat: alongRoute[1]\r\n    });\r\n    map.setFreeCameraOptions(camera);\r\n    let point = {\r\n        'type': 'FeatureCollection',\r\n        'features': [{\r\n            'type': 'Feature',\r\n            'properties': {},\r\n            'geometry': {\r\n                'type': 'Point',\r\n                'coordinates': alongRoute\r\n            }\r\n        }]\r\n    };\r\n    let src=map.getSource('point');\r\n    if(src)src.setData(point);\r\n    if(running){\r\n        runAni=requestAnimationFrame(frame);\r\n    }else{\r\n        cancelAnimationFrame(runAni);\r\n    }\r\n};\r\n","import React, {Component} from 'react';\r\nimport ImageList from '@material-ui/core/ImageList';\r\nimport ImageListItem from '@material-ui/core/ImageListItem';\r\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport {parseGeojson} from './MapPane'\r\nimport axios from 'axios';\r\nimport * as d3 from 'd3';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nconst itemData = [];\r\n\r\nconst fileRead=(data)=>{\r\n//  let url=\"https://termat.github.io/potaling/geojson/\"+data.target.alt;\r\n  let url=\"/potaling/geojson/\"+getItem(data.target.alt);\r\n  window.location.search=\"page=\"+data.target.alt;\r\n  axios.get(url)\r\n  .then(res => {\r\n    const val = res.data;\r\n    let str=JSON.stringify(val);\r\n    parseGeojson(str)\r\n  });\r\n};\r\n\r\nconst getItem=(id)=>{\r\n  for(let i=0;i<itemData.length;i++){\r\n    if(id==itemData[i].no){\r\n      return itemData[i].json;\r\n    }\r\n  }\r\n  return \"\"\r\n}\r\n\r\nexport function startData(page){\r\n  for(let i=0;i<itemData.length;i++){\r\n    if(itemData[i].no==page){\r\n      let url=\"/potaling/geojson/\"+getItem(page);\r\n      axios.get(url)\r\n      .then(res => {\r\n        const val = res.data;\r\n        let str=JSON.stringify(val);\r\n        parseGeojson(str)\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default class MainListItems extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let pageNo=this.props.page;\r\n    let url=\"/potaling/pota_data.csv\";\r\n    d3.csv(url, function(data) {\r\n      itemData.push(data);\r\n    }).then(function(data) {\r\n      if(pageNo){\r\n        setTimeout(function(){startData(pageNo);},2500);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <ImageList cols={1}>\r\n        <ImageListItem key=\"Subheader\">\r\n          <ListSubheader component=\"div\">ポタリングデータ</ListSubheader>\r\n        </ImageListItem>\r\n        {itemData.map((item) => (\r\n          <ImageListItem key={item.img}>\r\n            <img\r\n              srcSet={`${process.env.PUBLIC_URL}/images/${item.img}`}\r\n              alt={item.no}\r\n              loading=\"lazy\"\r\n              onClick={fileRead}\r\n            />\r\n            <ImageListItemBar\r\n              title={item.title}\r\n              subtitle={item.date}\r\n              actionIcon={\r\n                <IconButton\r\n                  sx={{ color: 'rgba(255, 255, 255, 0.54)' }}\r\n                  aria-label={`info about ${item.title}`}\r\n                >\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </ImageListItem>\r\n        ))}\r\n      </ImageList>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">アプリの使い方</DialogTitle>\r\n      <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/qSJzxQrFlvE\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n     </Dialog>\r\n  );\r\n}\r\n\r\nexport default function YoutubeDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n      <div>\r\n      <Button variant=\"contained\" size=\"large\" onClick={handleClickOpen}>　使い方　</Button>\r\n      <SimpleDialog open={open} onClose={handleClose} />\r\n      </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport YotubeDialog from './SimpleDialog'\r\nimport {setup} from './Dashboard';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        t.matsuoka\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst img_style = {\r\n  width: \"100%\" \r\n}; \r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport let handleDialogOpen;\r\nexport let handleDialogClose;\r\n\r\nexport default function FullScreenDialog(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(props.open);\r\n\r\n  handleDialogOpen = () => {\r\n    isLoadwidgets=false;\r\n    setOpen(true);\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    setOpen(false);\r\n    setup();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open} onClose={handleDialogClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleDialogClose} aria-label=\"close\">\r\n              <DirectionsBikeIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title} onClick={handleDialogClose}>\r\n              ポタリングの記録\r\n            </Typography>\r\n            <Box sx={{ display: { xs: 'none', md: 'inline' } }}>\r\n              <div style={{marginRight:\"10px\",display:'inline'}} ><Follow /></div>\r\n              <div style={{marginRight:\"30px\",display:'inline'}}><a href=\"https://twitter.com/share\" className=\"twitter-share-button\" style={{marginRight:\"20px\"}}>Tweet</a></div>\r\n            </Box>\r\n            <CloseIcon onClick={handleDialogClose} />\r\n            <Button color=\"inherit\" onClick={handleDialogClose}>\r\n              Close\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n          <img src={`${process.env.PUBLIC_URL}/images/back.jpg`} style={img_style} alt={'top'} />\r\n          <Box textAlign=\"center\">\r\n          <h1>ポタリングした地域を3D地図で俯瞰する実験サイトです。</h1>\r\n          <p style={{fontSize: \"20px\"}}>ポタリング（自転車散歩）した地域を俯瞰してみたいと思い作成したWebアプリです。<br />\r\n            データ（geojson/gpx）を読み込むと、3D地図上で経路の俯瞰画像が表示されます。<br />\r\n            実際に走った経路を俯瞰してみると小さな発見があって結構面白いです。</p>\r\n          <Button variant=\"contained\" style={{margin:\"10px\"}} size=\"large\" onClick={handleDialogClose}>　開　始　</Button>\r\n          <YotubeDialog />\r\n          </Box>\r\n        </div>\r\n        <br />\r\n        <Copyright />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nlet isLoadwidgets = false;\r\nconst Follow = () => {\r\n  React.useEffect(() => {\r\n    if (!isLoadwidgets) {\r\n      const s = document.createElement(\"script\");\r\n      s.setAttribute(\"src\", \"https://platform.twitter.com/widgets.js\");\r\n      document.body.appendChild(s);\r\n      isLoadwidgets = true;\r\n    }\r\n  }, []);\r\n  return (\r\n    <a href=\"https://twitter.com/t_mat?ref_src=twsrc%5Etfw\" className=\"twitter-follow-button\" data-show-count=\"false\">Follow @t_mat</a>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Box from '@material-ui/core/Box';\r\nimport DatePicker from \"react-datepicker\";\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nlet fname;\r\nlet gpxParser = require('gpxparser');\r\n\r\nconst ALLOWED_METHODS = [\r\n    'GET',\r\n    'POST',\r\n    'PUT',\r\n    'PATCH',\r\n    'DELETE',\r\n    'HEAD',\r\n    'OPTIONS'\r\n];\r\n\r\nconst ALLOWED_ORIGINS = [\r\n    'https://127.0.0.1:3000',\r\n    'https://127.0.0.1:3001'\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialog: {\r\n        padding: \"0px\",\r\n      },\r\n    toolbar: {\r\n        height:\"60px\",\r\n        color: \"#fff\",\r\n        backgroundColor: \"#3f51b5\",\r\n      },\r\n    title: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    box: {\r\n        margin:\" 0 auto\"\r\n      },\r\n    textField:{\r\n        width:\"100%\",\r\n        fontSize:\"16px\",\r\n        fontfamily:\"sans-serif\",\r\n    },\r\n    image:{\r\n        width:\"360px\",\r\n    },\r\n    button: {\r\n        fontSize:\"16px\",\r\n        fontfamily:\"sans-serif\",\r\n        margin: theme.spacing(1),\r\n        width:\"100%\",\r\n      },\r\n  }));\r\n\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n  \r\n \r\n  export let registDialogOpen;\r\n  \r\n  export default function RegistDialog() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [photo_src, setPhotoSrc] = useState(null);\r\n    const [route_src, setRouteSrc] = useState(null);\r\n    const [json, setJson] = useState(null);\r\n  \r\n    registDialogOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    const fileRead=()=>{\r\n        let fileInput = document.getElementById('file');\r\n        let fileReader = new FileReader();\r\n        fileInput.onchange = () => {\r\n            let file = fileInput.files[0];\r\n            if(!file||!file.name)return;\r\n            fname=file.name.toLowerCase();\r\n            fileReader.readAsText(file);\r\n        };\r\n        fileReader.onload = () => fileProc(fileReader.result);\r\n        fileInput.click();\r\n      };\r\n    \r\n      const fileProc=(obj)=>{\r\n        if(fname.endsWith(\".geojson\")){\r\n            setJson(obj);\r\n        }else if(fname.endsWith(\".json\")){\r\n            setJson(obj);\r\n        }else if(fname.endsWith(\".gpx\")){\r\n          let gpx=new gpxParser();\r\n          gpx.parse(obj);\r\n          obj=JSON.stringify(gpx.toGeoJSON());\r\n          setJson(obj);\r\n        }\r\n\r\n        axios.post(`http://localhost:4567/potaling/route`,obj,\r\n           {\r\n               headers: {'Content-Type': 'application/json'},\r\n               accept: \"application/json\",\r\n               withCredentials: false,\r\n               AccessControlAllowOrigin:\"*\",\r\n               AccessControlAllowMethods:\"GET,PUT,POST,DELETE,OPTIONS\",\r\n               preflightContinue: false,\r\n            })\r\n        .then(res => {\r\n          console.log(res);\r\n        })\r\n        .catch(function(error) {\r\n            console.log('ERROR!! occurred in Backend.')\r\n        });\r\n/*\r\n        const fetchOption = {\r\n            method: 'POST',\r\n            body: obj\r\n        };\r\n        const headers = new Headers();\r\n        headers.append('Access-Control-Allow-Origin', origin);\r\n        headers.append('Access-Control-Allow-Methods', ALLOWED_METHODS.join(','));\r\n        headers.append('Access-Control-Allow-Headers', 'Content-type,Accept,X-Custom-Header');\r\n        headers.append('Content-Type', 'application/json');\r\n        fetchOption['headers'] = headers;   \r\n\r\n        fetch(`http://localhost:4567/potaling/route`, fetchOption)\r\n        .then(res => {\r\n            console.log(res.status);\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n*/\r\n\r\n\r\n\r\n    };\r\n\r\n    const photoRead=()=>{\r\n        let fileInput = document.getElementById('file');\r\n        let fileReader = new FileReader();\r\n        fileInput.onchange = () => {\r\n            let file = fileInput.files[0];\r\n            if(!file||!file.name)return;\r\n            fname=file.name.toLowerCase();\r\n            fileReader.readAsDataURL(file);\r\n        };\r\n        fileReader.onload = () => setPhotoSrc(fileReader.result);\r\n        fileInput.click();\r\n      };\r\n\r\n    return (\r\n      <div>\r\n        <Dialog className={classes.dialog} open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n          <Toolbar className={classes.toolbar}>\r\n              <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                <DirectionsBikeIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title} onClick={handleClose}>\r\n                データ登録\r\n              </Typography>\r\n              <CloseIcon onClick={handleClose} />\r\n          </Toolbar>\r\n            <Box className={classes.box}>\r\n                <table align=\"center\" width=\"100%\">\r\n                    <tbody className={classes.textField}>\r\n                    <tr>\r\n                        <td>タイトル</td>\r\n                        <td><TextField className={classes.textField} id=\"title\" label=\"title\" placeholder=\"タイトル名\" variant=\"standard\"　autoComplete=\"off\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>データ　</td>\r\n                        <td><Button variant=\"contained\" onClick={fileRead} className={classes.button} startIcon={<FolderOpenIcon />}>読み込み</Button></td>\r\n                   </tr>\r\n                    <tr>\r\n                        <td>記録日　</td>\r\n                        <td><DatePicker className={classes.textField} selected={startDate} onChange={(date) => setStartDate(date)} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>写　真　</td>\r\n                        <td><Button variant=\"contained\" onClick={photoRead} className={classes.button} startIcon={<FolderOpenIcon />}>読み込み</Button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"2\"><img className={classes.image} src={route_src} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"2\"><img className={classes.image} src={photo_src} /></td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </Box>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MainListItems from './listItems';\nimport jumpData from './listItems';\nimport MapPane from './MapPane';\nimport ControlBar from './ControlBar';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MapIcon from '@material-ui/icons/Map';\nimport AllOutIcon from '@material-ui/icons/AllOut';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport {fitBounds,parseGeojson,changeStyle} from './MapPane'\nimport FullScreenDialog from './FullScreenDialog'\nimport {handleDialogOpen} from './FullScreenDialog'\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Grid from '@material-ui/core/Grid';\nimport RegistDialog from './RegistDialog'\nimport {registDialogOpen} from './RegistDialog';\n\nlet gpxParser = require('gpxparser');\nlet tcxParse = require('tcx');\nvar DOMParser = require('xmldom').DOMParser;\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    height:'65px',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    boxSizing: 'border-box',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  toolbarButtons: {\n    marginLeft: 'auto',\n  },\n}));\n\nlet fname;\n\nconst fileRead=()=>{\n  let fileInput = document.getElementById('file');\n  let fileReader = new FileReader();\n  fileInput.onchange = () => {\n      let file = fileInput.files[0];\n      if(!file||!file.name)return;\n      fname=file.name.toLowerCase();\n      console.log(file.name);\n      console.log(file.size);\n      console.log(file.type);\n      fileReader.readAsText(file);\n  };\n  fileReader.onload = () => fileProc(fileReader.result);\n  fileInput.click();\n};\n\nconst fileProc=(obj)=>{\n  if(fname.endsWith(\".geojson\")){\n      parseGeojson(obj);\n  }else if(fname.endsWith(\".json\")){\n    parseGeojson(obj);\n  }else if(fname.endsWith(\".gpx\")){\n    let gpx=new gpxParser();\n    gpx.parse(obj);\n    parseGeojson(JSON.stringify(gpx.toGeoJSON()));\n  }else if(fname.endsWith(\".tcx\")){\n    var doc = new DOMParser().parseFromString(obj);\n    let tcx=tcxParse(doc);\n    parseGeojson(JSON.stringify(tcx));\n  }\n};\n\nlet current_map=0;\n//let MAPS=[MapPane.PHT,MapPane.STD,MapPane.SAT];\nlet MAPS=[MapPane.PHT,MapPane.STD];\n\nconst changeMap=()=>{\n  current_map=(current_map+1)%MAPS.length;\n  changeStyle(MAPS[current_map],current_map);\n}\n\nexport let setup;\n\nexport default function Dashboard(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  setup=()=>{\n    if(props.window){\n      handleDrawerOpen();\n      setTimeout(handleDrawerClose,1000);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\" sx={{ display: { xs: 'none', md: 'block' } }}>\n            ポタリングの記録\n          </Typography>\n          <div className={classes.toolbarButtons}>\n          <Grid container alignItems=\"center\" className={classes.root}>\n          <Divider orientation=\"vertical\" flexItem />\n          <Tooltip title=\"ログ読込\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={fileRead}>\n              <FolderOpenIcon />\n            </IconButton>\n            </Tooltip>\n            <input type=\"file\" accept=\".geojson,.json,.gpx,.tcx\" id=\"file\" style={{ display: 'none'}}></input>\n            <Tooltip title=\"地図切替\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={changeMap}>\n              <MapIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"領域移動\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={fitBounds}>\n              <AllOutIcon />\n            </IconButton>\n            </Tooltip>\n            <Tooltip title=\"トップページ\" placement=\"bottom\">\n            <IconButton color=\"inherit\" onClick={handleDialogOpen}>\n              <NotificationsIcon />\n            </IconButton>\n            </Tooltip>\n{/*\n            <Tooltip title=\"登録\" placement=\"bottom\">  \n            <IconButton color=\"inherit\" onClick={registDialogOpen}>\n              <NotificationsIcon />\n            </IconButton>\n            </Tooltip>\n*/}\n            <Divider orientation=\"vertical\" flexItem />\n            </Grid>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List><MainListItems page={props.page} /></List>\n        <Divider />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Container maxWidth=\"xl\" className={classes.container} onClick={handleDrawerClose} >\n          <MapPane />\n          <ControlBar /> \n        </Container>\n      </main>\n      <FullScreenDialog open={props.window}/>\n      <RegistDialog />\n    </div>\n  );\n}\n","import React from 'react';\r\nimport { BrowserRouter, Routes ,Route,useParams,useLocation} from 'react-router-dom';\r\nimport Dashboard from './components/Dashboard';\r\n\r\nconst App=()=> {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path='/potaling' element={<Child />} />\r\n        <Route path=\"*\" element={<div>404 page not found.</div>} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport const Child = () => {\r\n  const location = useLocation();\r\n  const arg=getArg(location.search);\r\n  if(arg[\"page\"]){\r\n    return (\r\n      <Dashboard page={arg[\"page\"]} window={false} />\r\n    )\r\n  }else{\r\n    return (\r\n      <Dashboard window={true} />\r\n    )\r\n  }\r\n}\r\n\r\nconst getArg=(search)=>{\r\n  var arg = new Object;\r\n  var pair=search.substring(1).split('&');\r\n  for(var i=0;pair[i];i++) {\r\n      var kv = pair[i].split('=');\r\n      arg[kv[0]]=kv[1];\r\n  }\r\n  return arg;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}